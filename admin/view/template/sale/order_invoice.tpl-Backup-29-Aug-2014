<?php

((isset($_REQUEST['shippinglabels'])) && $_REQUEST['shippinglabels'] == 'ship') ? $label = 'ship' : $label = 'invoice';
      
      // Load the serial number stuff so we can generate keycodes for output
      $this->load->model('catalog/serial');

      // If we want duplicates, then lets set a variable to 2, otherwise, we only want 1.
      if(isset($_REQUEST['duplicates'])) {
        if($_REQUEST['duplicates'] == 'true') {
          $wanted = 2;
        }
        else {
          $wanted = 1;
        }
      }
      else {
          $wanted = 1;
      }

      // We have currently printed 0 of our $wanted total.
      $printed = 0;

      // What order would we like to print them in? Cut order, or sequential order? This should default to cut sorting.
      (isset($_REQUEST['cut_order']) && $_REQUEST['cut_order'] == 'seq') ? $cut = 'seq' : $cut = 'cut';

      // Record counter.
      $i = 0;

      // Array of the output for each invoice.
      $output[] = array();

      // Array for the output of shipping labels.
      $shippingLabels[] = array();
      $ship = '';

      // Loop through each order
      foreach ($orders as $order) {

        $data['supressNelco'] = 0;
        if(! isset($_REQUEST['supressNelco'])) { $_REQUEST['supressNelco'] = 'false'; }
        if($_REQUEST['supressNelco'] == 'true') {
          $data['supressNelco'] = '1';
        }
        else {
          $data['supressNelco'] = '0';
        }

        $data['notify'] = 0;
          if(! isset($_REQUEST['notifyUser'])) { $_REQUEST['notifyUser'] = 'false'; }
          if($_REQUEST['notifyUser'] == 'true') {
            $data['notify'] = '1';
          }
          else { 
            $data['notify'] = '0';
          }

          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          // ORDER PROCESSING STATUS STUFF SECTION                                                                                                          //
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

          // Here, we need to figure out what they are printing, loop through the orders, and set the status of the processing queue for each order.
          if($label == 'ship') {
            // Order Processing Status ID
            $opsid = $this->model_sale_order->getOrderProcessingStatus($order['order_id'])[0]['order_processing_status_id'];
            // Order Status ID
            $osid  = $this->model_sale_order->getOrder($order['order_id'])['order_status_id'];

            // Add the order history
            $data['order_status_id'] = $osid;
            $data['comment'] = 'Your order is being shipped.';
            $data['tracker_url'] = '';
            $data['tracking_numbers'] = '';
            $this->model_sale_order->addOrderHistory($order['order_id'], $data);


            $this->load->model('user/user');
            $user_group_id = $this->model_user_user->getUser($this->user->getId());
            $user_gid = $user_group_id['user_group_id'];

            if($user_gid == '12' || $user_gid == '1') {

            // if opsid is equal to 1, we want to change it to 3.
              switch($opsid) {
                case 1:
                  $this->model_sale_order->setOrderProcessingStatus($order['order_id'], '3');
                  break;
                case 2:
                  $this->model_sale_order->setOrderProcessingStatus($order['order_id'], '5');
                  break;
              }
            }
          }

          if($label == 'invoice') {
            // Order Processing Status ID
            $opsid = $this->model_sale_order->getOrderProcessingStatus($order['order_id'])[0]['order_processing_status_id'];
            // Order Status ID
            $osid  = $this->model_sale_order->getOrder($order['order_id'])['order_status_id'];

            // Add the order history
            $data['order_status_id'] = $osid;
            $data['comment'] = 'Invoice has been printed.';
            $data['tracker_url'] = '';
            $data['tracking_numbers'] = '';
            $this->model_sale_order->addOrderHistory($order['order_id'], $data);

            $this->load->model('user/user');
            $user_group_id = $this->model_user_user->getUser($this->user->getId());
            $user_gid = $user_group_id['user_group_id'];

            if($user_gid == '12' || $user_gid == '1') {
              // if opsid is equal to 1, we want to change it to 2.
              switch($opsid) {
                case 1:
                  $this->model_sale_order->setOrderProcessingStatus($order['order_id'], '2');
                  break;
                case 3:
                  $this->model_sale_order->setOrderProcessingStatus($order['order_id'], '5');
                  break;
              }
            }
          }
        
          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          // TIME TO START THE PRINTING STUFF                                                                                                                //
          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

          // Print loop
          while($printed < $wanted) {

            // Here we need to make a block for the entire order. 
            // If the order has 1 serial number, display it. If it has more than 1 serial number, do not display it.
   
            $headerInfo = "
              <!-- START AN INVOICE -->
              <table class='contentTable'>
               <tr>
                 <td>
                   <table class='headerTable'>
                     <tr>";

/*            $headerInfo .= "
                       <td class='logoBox'>
                         <img src='../images/logo.jpg' style='width:150px' />
                       </td>
                       <td class='amsBox'>
                         " . $order['store_name'] . "<br />
                         " . $order['store_address'] . "<br />
                         Sales: (800) 536-1099<br />
                         Support: (405) 340-0697<br />
                         Email: info@1099-etc.com<br />
                         <!-- Tax ID: 73-1270820 -->
                       </td>
                       <td class='shippingBox'>
                         " . $order['shipping_address'] . "
                       </td>";
*/
            $headerInfo .= "
                       <td class='amsInfoBox' colspan='2'>
                         <img src='../images/logo.jpg' style='width:150px' /><br />
                         " . $order['store_name'] . "<br />
                         " . $order['store_address'] . "<br />
                         Sales: (800) 536-1099<br />
                         Support: (405) 340-0697<br />
                         Email: info@1099-etc.com<br />
                         <!-- Tax ID: 73-1270820 -->
                       </td>
                       <td class='shippingBox'>
                         " . $order['shipping_address'] . "
                       </td>";


            $headerInfo .="   
                       <td class='invoiceBox'>
                          <table align='right'>
                           <tr><td><nobr>Order ID:</nobr></td><td><nobr>" .  $order['order_id'] . "</nobr></td></tr>
                           <tr><td><nobr>Payment Method:</nobr></td><td><nobr>" . $order['payment_method'] . "</nobr></td></tr>";

            if((strpos($order['payment_method'], "Invoice") !== false) || (strpos($order['payment_method'], "invoice") !== false)) {
              if(isset($order['invoice_no']) && $order['invoice_no'] != '') { $headerInfo .= "<tr><td><nobr>Invoice Number:</nobr></td><td><nobr>" . $order['invoice_no'] . "</nobr></td></tr>"; }
              $headerInfo .= "<tr><td><nobr>Invoice Date:</nobr></td><td><nobr>" . $order['invoice_date'] . "</nobr></td></tr>";
            }
            else {
              $headerInfo .= "<tr><td><nobr>Payment Date:</nobr></td><td><nobr>" . $order['date_added'] . "</nobr></td></tr>";
            }

            $headerInfo .= "
                       </table>
                     </td>
                   </tr>
                 </table>
               </td>
             </tr>
             <tr>
               <td>
            ";
        
            // add the header to the actual invoice
            $invoice = $headerInfo;
           
            $ship = "<div class='shippingLabel'>";
            $ship .= $order['shipping_address'];

            // The header is done. We can reuse that on any serial page invoice prints. Now, on to the serial table.
            // If there was only 1 product purchased, and there is only 1 serial number, then this invoice gets a serial block. Otherwise,
            //      each serial will get its own page.
            if(isset($order['product'][0]['serial'][0])) {
              $invoice .= "<table class='serialTable'><tr><td class='serialBox'>Serial # : " . $order['product'][0]['serial'][0] . $order['product'][0]['featurecode'][0] . "
                  </td><td class='keyBox'>Keycode : " . $this->model_catalog_serial->generate_keycode($order['product'][0]['serial'][0] . $order['product'][0]['featurecode'][0]) . "
                  </td></tr></table></td></tr><tr><td>";
            
              // Add the serial to the shipping label

              $serialPortion = "Serial: " . $order['product'][0]['serial'][0] . $order['product'][0]['featurecode'][0] . " - Key: ";
              $serialPortion .= $this->model_catalog_serial->generate_keycode($order['product'][0]['serial'][0] . $order['product'][0]['featurecode'][0]);
 
//              $ship = preg_replace('#<br />#', ' - ' . $serialPortion . '<br />', $ship, 1);
              $ship .= '<br />' . $serialPortion;
            }
            $ship .= "</div>";

            // Products table header
            $invoice .= "<table class='purchaseTable'>
                          <tr>
                            <td class='headings headingQTY'>
                              QTY
                            </td>
                            <td class='headings headingDescription'>
                              Description
                            </td>
                            <td class='headings headingPrice'>
                              Price
                            </td>
                            <td class='headings headingTotal'>
                              Total
                            </td>
                          </tr>
                          <!-- BEGIN LINE ITEMS -->";

              // Now to loop through each of the products
              foreach($order['product'] as $product) {

                if(count($order['product']) <= 2) {

                  if(stripos($product['name'], "1099-Etc Software") !== false) {
                    $invoice .= "<tr>
                             <td class='lineItem itemQuantity'>
                               " . $product['quantity'] . "
                             </td>
                             <td class='lineItem itemName'>
                               <nobr>W-2 / 1099 Forms Filer </nobr>
                             </td>
                             <td class='lineItem'>";
                    // Quick figure of the base price.
                    (float)$productPrice = substr($product['price'],1);
                    foreach($product['option'] as $O) {
                      $productPrice = $productPrice - (float)$O['price'];
                    }

                    $invoice .= " $". number_format((float)$productPrice, 2, '.', '') . "
                               </td>
                               <td class='lineItem'>
                                 $" . number_format((float)$productPrice * $product['quantity'], 2, '.','') . "
                               </td>
                             </tr>";
                  } // End of 1099-Etc Software
                  else {
                    $invoice .= "<tr>
                             <td class='lineItem itemQuantity'>
                               " . $product['quantity'] . "
                             </td>
                             <td class='lineItem itemName'>
                               " . $product['name'] . "
                             </td>
                             <td class='lineItem'>";
                    // Quick figure of the base price.
                    (float)$productPrice = substr($product['price'],1);
                    foreach($product['option'] as $O) {
                      $productPrice = $productPrice - (float)$O['price'];
                    }

                    $invoice .= " $". number_format((float)$productPrice, 2, '.', '') . "
                               </td>
                               <td class='lineItem'>
                                 $" . number_format((float)$productPrice * $product['quantity'], 2, '.','') . "
                               </td>
                             </tr>";
                  }

                // And loop through each of the product options
                foreach($product['option'] as $option) {
                  if($option['name'] != 'Payroll and Printing') {
                    $invoice .= "<tr>
                                 <td class='lineItem' style='text-align: center'>";
                    if($option['value'] != 'No Thank You') {
                      $invoice .= $product['quantity']; 
                    }
                    else {
                      $invoice .= "0";
                    }
                    $invoice .= "</td>
                                 <td class='lineItem' style='text-align: left;'>";
                    $invoice .= $option['name'];
                   
                    $invoice .= "</td><td class='lineItem'>";
  
                    if($option['value'] == 'No Thank You' && $option['value'] != '') {
                      $invoice .= "Not Purchased";
                    }
                    elseif($option['value'] != '' && $option['value'] != 'No Thank You') {
                      $invoice .= "$" . number_format((float)$option['price'], 2, '.','') ."";
                    }
                    else {
                      $invoice .= "&nbsp;";
                    }

                    $invoice .= "</td><td class='lineItem'>";
                    $invoice .= "$" . number_format((float)$option['price'] * $product['quantity'], 2, '.','');
                    $invoice .= "</td>
                               </tr>";
                  } // End if not 'Payroll and Printing'
                  else {

                    // Basically, we need to figure out if the user bought AMS Payroll, Software Generated Forms, Both, or Neither... and then acquire the information needed to finish the form.
                    if($option['value'] == 'No Thank You') {
                      // Here the user bought neither.
                      $softwareGeneratedFormsPrice = 'Not Purchased';
                      $softwareGeneratedFormsQuantityPrice = '$0.00';
                      $softwareGeneratedFormsPurchased = "0";
                      $amsPayrollPurchased = "0";
                      $amsPayrollPrice = 'Not Purchased';
                      $amsPayrollQuantityPrice = '$0.00';
                    }
                    elseif($option['value'] == 'AMS Payroll') {
                      // Here the user bought Payroll Only
                      $softwareGeneratedFormsPrice = "Not Purchased";
                      $softwareGeneratedFormsQuantityPrice = "$0.00";
                      $softwareGeneratedFormsPurchased = "0";
                      $amsPayrollPurchased = $product['quantity'];
                      $amsPayrollPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'AMS Payroll'), 2, '.','');
                      $amsPayrollQuantityPrice = "$" . number_format((float)$amsPayrollPrice * $product['quantity'], 2, '.','');
                      $amsPayrollPrice = "$" . $amsPayrollPrice;
                    }
                    elseif($option['value'] == 'Software Generated Forms') {
                      // Here the user bought Software Generation Only
                      $amsPayrollPrice = "Not Purchased";
                      $amsPayrollQuantityPrice = "$0.00";
                      $softwareGeneratedFormsPurchased = $product['quantity'];
                      $amsPayrollPurchased = "0";
                      $softwareGeneratedFormsPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'Software Generated Forms'), 2, '.','');
                      $softwareGeneratedFormsQuantityPrice = "$" . number_format((float)$softwareGeneratedFormsPrice * $product['quantity'], 2, '.','');
                      $softwareGeneratedFormsPrice = "$" . $softwareGeneratedFormsPrice;
                    }
                    elseif($option['value'] == 'AMS Payroll and Software Generated Forms') {
                      // Here, the user bought both.
                      $amsPayrollPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'AMS Payroll'), 2, '.','');
                      $amsPayrollQuantityPrice = "$" . number_format((float)$amsPayrollPrice * $product['quantity'], 2, '.','');
                      $softwareGeneratedFormsPurchased = $product['quantity'];
                      $amsPayrollPurchased = $product['quantity'];
                      $softwareGeneratedFormsPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'Software Generated Forms'), 2, '.','');
                      $softwareGeneratedFormsQuantityPrice = "$" . number_format((float)$softwareGeneratedFormsPrice * $product['quantity'], 2, '.','');
                      $amsPayrollPrice = "$" . $amsPayrollPrice;
                      $softwareGeneratedFormsPrice = "$" . $softwareGeneratedFormsPrice;
                    }

                    $invoice .= "<tr><td class='lineItem itemQuantity'>";
                    $invoice .= $softwareGeneratedFormsPurchased;
                    $invoice .= "</td><td class='lineItem itemName'>";
                    $invoice .= "Software Generated Forms";
                    $invoice .= "</td><td class='lineItem'>";
                    $invoice .= $softwareGeneratedFormsPrice;
                    $invoice .= "</td><td class='lineItem'>";
                    $invoice .= $softwareGeneratedFormsQuantityPrice;
                    $invoice .= "</td></tr>";

                    $invoice .= "<tr><td class='lineItem itemQuantity'>";
                    $invoice .= $amsPayrollPurchased;
                    $invoice .= "</td><td class='lineItem itemName'>";
                    $invoice .= "AMS Payroll";
                    $invoice .= "</td><td class='lineItem'>";
                    $invoice .= $amsPayrollPrice;
                    $invoice .= "</td><td class='lineItem'>";
                    $invoice .= $amsPayrollQuantityPrice;
                    $invoice .= "</td></tr>";
  
                  } // End of Else 'Payroll and Printing'
  
                } // End of foreach product['options'];
 


              }// if Products <= 2
              // We will need to condense the items on the first page.
              else {
                    $invoice .= "<tr>
                             <td class='lineItem itemQuantity'>
                               " . $product['quantity'] . "
                             </td>
                             <td class='lineItem itemName'>
                               " . $product['name'] . "
                             </td>
                             <td class='lineItem'>";

                    $productPrice = substr($product['price'],1);

                    $invoice .= " $". number_format((float)$productPrice, 2, '.','') . "
                               </td>
                               <td class='lineItem'>
                                 $" . number_format((float)$productPrice * $product['quantity'], 2, '.','') . "
                               </td>
                             </tr>";

              } // End of Else count products <= 2

            } // End of foreach products
            $invoice .= "<!-- END LINE ITEMS --> ";
            if($data['supressNelco'] == 1) {
              $invoice .= "<tr>
                             <td rowspan='6' colspan='2' class='nelcoAd'>
                               &nbsp;
                             </td>
                           </tr>";
              }
              else {
                $invoice .= "<tr>
                             <td rowspan='6' colspan='2' class='nelcoAd'>
                               <b>Need Compatible Forms?</b><br />
                               Call <a href='http://1099-etc.nelcosolutions.com/'>NELCO</a> at 800.266.4669 or visit<br /><a href='http://1099-etc.nelcosolutions.com/'>http://1099-etc.nelcosolutions.com/</a> to order!
                             </td>
                           </tr>";
              }

              foreach($order['total'] as $total) {
                $invoice .= "<tr>
                               <td class='totalHeading'>
                                 " . $total['title'] . "
                               </td>
                               <td class='totals'>
                                 " . $total['text'] . "
                               </td>
                             </tr>";
             }
             $invoice .= "</table>
                        </td>
                      </tr>
                    </table>
                    <!-- END AN INVOICE -->";

             // put the invoice into the array.
             $output[$i] = $invoice;
             $shippingLabels[$i] = $ship;

             // Increment the counter.
             $i = $i + 1;

             // Increment how many we've printed.
             $printed = $printed + 1;
           } // End While - print loop.

           // Reset the print counter.
           $printed = 0;

           // Clear the invoice variable
           unset($invoice);
           unset($ship);

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // This is where we need to loop through the serials and print the serial pages... but only if there is more than 1 product and more than 1 serial. //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        // If there was only 1 product ordered and that product only has 1 serial number, then we don't need to print these sheets.

$counter = 0;
foreach($order['product'] as $p) {
  if(isset($p['serial'])) {
    $counter++;
  }
}

//        if((count($order['product']) > 1 || count($order['product'][0]['serial']) > 1 ) && isset($order['product'][0]['serial'][0])) {
  if($counter > 1) {     
          foreach($order['product'] as $product) { 

            // Now, loop through each serial
            if(is_array($product['serial']) && count($product['serial']) > 0) {
            foreach($product['serial'] as $serialKey => $serial) {


              // Print loop
              while($printed < $wanted) {

                // Make the shipping label
                $ship  = "<div class='shippingLabel'>";
                $ship .= $order['shipping_address'];
//                $ship .= "<br /><br />Serial: " . $serial . $product['featurecode'][$serialKey] . " - Key: ";
//                $ship .= $this->model_catalog_serial->generate_keycode($serial . $product['featurecode'][$serialKey]);


              $serialPortion = '';
              if(isset($serial)) {
              // Add the serial to the shipping label
              $serialPortion = "<br />Serial: " . $serial . $product['featurecode'][0] . " - Key: ";
              $serialPortion .= $this->model_catalog_serial->generate_keycode($serial . $product['featurecode'][0]);

//              $ship = preg_replace('#<br />#', ' - ' . $serialPortion . '<br />', $ship, 1);
              $ship .= '' . $serialPortion;
              }
                $ship .= "</div>";





//                $serialPortion = " - Serial: " . $serial . $product['featurecode'][$serialKey] . " - Key: ";
//                $serialPortion .= $this->model_catalog_serial->generate_keycode($serial . $product['featurecode'][$serialKey]);

//                $ship = preg_replace('#<br />#', ' - ' . $serialPortion . '<br />', $ship, 1);




                /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                // Now each product may have more than 1 serial number. Each of those serial numbers needs their own page. //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////
                $invoice = $headerInfo;

                $invoice .= "<table class='serialTable'>
                               <tr>
                                 <td class='serialBox'>
                                   Serial # : " . $serial . $product['featurecode'][$serialKey] . "
                                 </td>
                                 <td class='keyBox'>
                                   Keycode : " . $this->model_catalog_serial->generate_keycode($serial . $product['featurecode'][$serialKey]) . "
                                 </td>
                               </tr>
                             </table>
                           </td>
                         </tr>
                         <tr>
                           <td>";

                $invoice .= "<table class='purchaseTable'>
                               <tr>
                                  <td class='headings headingQTY'>
                                    QTY
                                  </td>
                                  <td class='headings headingDescription'>
                                    Description
                                  </td>
                                  <td class='headings headingPrice'>
                                    Price
                                  </td>
                                  <td class='headings headingTotal'>
                                    Total
                                  </td>
                                </tr>
                                <!-- BEGIN LINE ITEMS -->
                                <tr>
                                  <td class='lineItem itemQuantity'>
                                    1
                                  </td>
                                  <td class='lineItem itemName'>
                                    " . $product['name'] . "
                                  </td>
                                  <td class='lineItem'>
                                   &nbsp;<!-- " . $product['price'] . " -->
                                  </td>
                                  <td class='lineItem'>
                                   &nbsp;<!-- " . $product['price'] . " -->
                                  </td>
                                </tr>";
                foreach($product['option'] as $option) {


              if($option['name'] != 'Payroll and Printing Modules') {
                $invoice .= "<tr>
                               <td class='lineItem itemQuantity'>";
                if($option['value'] != 'No Thank You') {
                  $invoice .= "1";
                }
                else {
                  $invoice .= "0";
                }
                $invoice .= "</td>
                               <td class='lineItem itemName'>";
                $invoice .= $option['name'];

                $invoice .= "</td><td class='lineItem'>";

                if($option['value'] == 'No Thank You' && $option['value'] != '') {
                  $invoice .= "Not Purchased";
                }
                elseif($option['value'] != '' && $option['value'] != 'No Thank You') {
                  $invoice .= "&nbsp;";
                }
                else {
                  $invoice .= "&nbsp;";
                }

                $invoice .= "</td><td class='lineItem'>";
                $invoice .= "&nbsp;";
                $invoice .= "</td>
                             </tr>";
              } // End if not 'Payroll and Printing Modules'
              else {

                // Basically, we need to figure out if the user bought AMS Payroll, Software Generated Forms, Both, or Neither... and then acquire the information needed to finish the form.
                if($option['value'] == 'No Thank You') {
                  // Here the user bought neither.
                  $softwareGeneratedFormsPrice = 'Not Purchased';
                  $softwareGeneratedFormsQuantityPrice = '$0.00';
                  $softwareGeneratedFormsPurchased = "0";
                  $amsPayrollPurchased = "0";
                  $amsPayrollPrice = 'Not Purchased';
                  $amsPayrollQuantityPrice = '$0.00';
                }
                elseif($option['value'] == 'AMS Payroll') {
                  // Here the user bought Payroll Only
                  $softwareGeneratedFormsPrice = "Not Purchased";
                  $softwareGeneratedFormsQuantityPrice = "$0.00";
                  $softwareGeneratedFormsPurchased = "0";
                  $amsPayrollPurchased = "1";
                  $amsPayrollPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'AMS Payroll'), 2, '.','');
                  $amsPayrollQuantityPrice = "$" . number_format((float)$amsPayrollPrice * $product['quantity'], 2, '.','');
                  $amsPayrollPrice = "$" . $amsPayrollPrice;
                }
                elseif($option['value'] == 'Software Generated Forms') {
                  // Here the user bought Software Generation Only
                  $amsPayrollPrice = "Not Purchased";
                  $amsPayrollQuantityPrice = "$0.00";
                  $softwareGeneratedFormsPurchased = "1";
                  $amsPayrollPurchased = "0";
                  $softwareGeneratedFormsPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'Software Generated Forms'), 2, '.','');
                  $softwareGeneratedFormsQuantityPrice = "$" . number_format((float)$softwareGeneratedFormsPrice * $product['quantity'], 2, '.','');
                  $softwareGeneratedFormsPrice = "$" . $softwareGeneratedFormsPrice;
                }
                elseif($option['value'] == 'AMS Payroll and Software Generated Forms') {
                  // Here, the user bought both.
                  $amsPayrollPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'AMS Payroll'), 2, '.','');
                  $amsPayrollQuantityPrice = "$" . number_format((float)$amsPayrollPrice * $product['quantity'], 2, '.','');
                  $softwareGeneratedFormsPurchased = "1";
                  $amsPayrollPurchased = "1";
                  $softwareGeneratedFormsPrice = number_format((float)$this->model_sale_order->getOptionPriceByIDandName($option['product_option_id'], 'Software Generated Forms'), 2, '.','');
                  $softwareGeneratedFormsQuantityPrice = "$" . number_format((float)$softwareGeneratedFormsPrice * $product['quantity'], 2, '.','');
                  $amsPayrollPrice = "$" . $amsPayrollPrice;
                  $softwareGeneratedFormsPrice = "$" . $softwareGeneratedFormsPrice;
                }


                $invoice .= "<tr><td class='lineItem itemQuantity'>";
                $invoice .= $softwareGeneratedFormsPurchased;
                $invoice .= "</td><td class='lineItem itemName'>";
                $invoice .= "Software Generated Forms";
                $invoice .= "</td><td class='lineItem'>";
                $invoice .= "&nbsp;";
                $invoice .= "</td><td class='lineItem'>";
                $invoice .= "&nbsp;";
                $invoice .= "</td></tr>";

                $invoice .= "<tr><td class='lineItem itemQuantity'>";
                $invoice .= $amsPayrollPurchased;
                $invoice .= "</td><td class='lineItem itemName'>";
                $invoice .= "AMS Payroll";
                $invoice .= "</td><td class='lineItem'>";
                $invoice .= "&nbsp;";
                $invoice .= "</td><td class='lineItem'>";
                $invoice .= "&nbsp;";
                $invoice .= "</td></tr>";

              } // End of Else 'Payroll and Printing'


            }
            $invoice .= "<!-- END LINE ITEMS -->";
               
                if($data['supressNelco'] == 1) {
                  $invoice .= "<tr>
                               <td rowspan='6' colspan='2' class='nelcoAd'>
                                &nbsp;
                               </td>
                             </tr>";
                } 
                else {
                  $invoice .= "<tr>
                               <td rowspan='6' colspan='2' class='nelcoAd'>
                                 <b>Need Compatible Forms?</b><br />
                                 Call <a href='http://1099-etc.nelcosolutions.com/'>NELCO</a> at 800.266.4669 or visit<br /><a href='http://1099-etc.nelcosolutions.com/'>http://1099-etc.nelcosolutions.com/</a> to order!
                               </td>
                             </tr>";
                }

                $invoice .= "</table></td></tr></table>
                           <!-- END OF INVOICE -->";

                // put the invoice into the array.
                $output[$i] = $invoice;
                $shippingLabels[$i] = $ship;

                // Increment the counters
                $i = $i + 1;
                $printed = $printed + 1;
              } // End While - print loop
       
              // Reset the print counter
              $printed = 0;

            } // End foreach product serial
            } // End of isset(product['serial'])
          } // End Foreach order products
        } // End if only 1 product
      } // end of foreach $orders

      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      // This is where we should check to see which output order we need to use, and output our invoices.
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      // Also need to determine whether we want invoices or shipping labels.
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

      if($label == 'invoice') {
?>

<?php
$pageTop = "
<html>
  <head>
    <title>Invoice</title>
    <style type='text/css'>
/*
      * { font-family:sans-serif; font-size:.95em; }
      body { background-color:white;}
      .contentTable { width:100%; height: 49%; padding-top: 0px;}
      .headerTable { vertical-align: top; margin-top: -20px; margin-bottom: 0px; }
      .logoBox { width:20%; padding: 0px; margin: 0px; vertical-align: top; }
      .invoiceBox { width:25%; text-align:right; vertical-align: top; font-size: 1.3em;}
      .amsBox { width:25%; font-size: 1.3em; padding-right: 15px; white-space: nowrap }
      .shippingBox { width:25%; font-size: 1.3em; vertical-align: top; text-align: left; }

      .serialTable {  }

      .serialBox { width:50%; border:1px solid black; text-align:center; }
      .keyBox { width:50%; border:1px solid black; text-align:center; background-color: red; }

      .purchaseTable { width:100%; padding-top:5px; margin:0px; vertical-align: top; }
      .purchaseTable td { font-size: 1.3em; }
      .headings { font-weight:bold; border-bottom:1px solid black; text-align: center;}
      .headingQTY { width:10%; }
      .headingDescription { width:50%; }
      .headingPrice { width:20%; }
      .headingTotal { width:20%; }
      .lineItem { border-bottom:1px solid black; border-left: 1px solid black; text-align: right; }
      .lineItem:nth-child(4) { border-right: 1px solid black; }
      .totalHeading { text-align:right; }
      .totals { text-align: right; }
      .nelcoAd { 
        vertical-align:middle; 
        font-weight: normal; 
        padding: 0px;
        margin-right: 0px;
      }

      @page { 
        margin-left:  .25in; 
        margin-right: .20in;
        margin-top:   .25in;
        margin-bottom: .25in;

      }

      @media print {
        @page { size: 8.5in 11in; margin: .25in; }
        * { font-family:verdana; font-size: 8px; }
        .contentTable { position:relative; width:100%; height:50%; top:0; left:0; }
        .nelcoAd b { font-weight: bold; font-size:1.5em; }
      }

*/

@page { margin: .25in .20in .25in .25in; font-family: verdana; font-weight: bold;  }

td { vertical-align: top; padding: 0px; margin: 0px; }

.contentTable { 
  position: relative; 
  width: 100%; 
  height: 49%; 
  padding: 0px; 
  margin: 0px; 
  page-break-before: avoid;
  page-break-inside: avoid;
  page-break-after: avoid;
}

.headerTable { vertical-align: top; margin: 0px; width: 100%; padding: 0px; }

.logoBox { vertical-align: top; padding: 0px; }
.logoBox img { width: 150px; }

.amsBox { vertical-align: top; white-space: nowrap; font-size: .8em; }
.shippingBox { vertical-align: top; white-space: nowrap;  font-size: .8em; padding-top: 100px; }

.amsInfoBox { vertical-align: top; white-space: nowrap; font-size: .8em; width: 25%; }
.amsInfoBox img { width: 150px; height: 100px; }

.invoiceBox { vertical-align: top; white-space: nowrap;  font-size: .8em; width: 20%; padding-top: 100px; }
.invoiceBox table { margin: 0px; padding: 0px; border-collapse: collapse; }

.serialTable { width: 100%; border: 1px solid black; border-collapse: collapse; vertical-align: top; margin-top: 5px; margin-bottom: 5px; }
.serialBox { width: 50%; text-align: center; border: 1px solid black; font-size: 1em; padding: 3px; }
.keyBox {width: 50%; text-align: center;  border: 1px solid black; font-size: 1em; padding: 3px; }

.purchaseTable { width: 100%; border-collapse: separate; border-spacing: 0px; }

      .headings { font-weight:bold; text-align: center; border-bottom: .5pt solid black; }
      .headingQTY { width:10%; }
      .headingDescription { width:50%; }
      .headingPrice { width:20%; }
      .headingTotal { width:20%; }
      .lineItem { border-left: .5pt solid black; border-bottom: .5pt solid black;  text-align: right; padding-left: 5px; padding-right: 5px; }
      .lineItem:nth-child(4) { border-right: .5pt solid black; }
      .totalHeading { text-align: left; border-bottom: 1px dotted black;  }
      .totals { text-align: right; border-bottom: 1px dotted black; }

.itemName { text-align: left; }
.itemQuantity { text-align: center; }

.nelcoAd { font-size: 1em; vertical-align: middle; }

    </style>
  </head>
  <body>
";
?>
<?php }

      if($label == 'ship') { ?>

<?php
$pageTop ="
<html>
  <head>
    <title>Shipping Label</title>

    <style type='text/css'>
      html, body {
        page-break-after: avoid; 
        page-break-before: avoid; 
      }
      body {
        height: auto;
      }
      .shippingLabel { 
        width:100%; 
        height:99%; 
        top:0; 
        left:0;
        font-size: 15px;
        vertical-align: middle;
        white-space: nowrap;
        page-break-inside: avoid;
        page-break-after: avoid;
        page-break-before: avoid; 
      }

      @page { 
        size: 4in 1.5in;
        margin-left: .2in;
        margin-top: .1in;
        margin-right:.1in;
        margin-bottom: .1in;
      }
      
    </style>

  </head>
  <body>
"; ?>
     <?php }






if($label == 'invoice') {
  $labelsToPrint = $output;
}

if($label == 'ship') {
  $labelsToPrint = $shippingLabels;
}

$printable = '';


      if($cut == 'cut') {
        // Split the array into 2 arrays, then loop through using an index counter, print array1[0], array2[0], array1[1], array2[1], etc...

        // Keep in mind that if cut sorting is chosen and duplicate copies are wanted, printing needs to be sequention. There's not a special order for full page printing.'

        $out1 = array_slice($labelsToPrint, 0, ceil(count($labelsToPrint) / 2));
        $out2 = array_slice($labelsToPrint, ceil(count($labelsToPrint) / 2));

        $counter = 0;
        while($counter <= ceil(count($out1))) {
          if(isset($out1[$counter])) {
            $printable .= $out1[$counter] . "\n";     
          }
          
          if(isset($out2[$counter])) {
            $printable .= $out2[$counter] . "\n";     
          }
          $counter = $counter + 1;
        }

      }
      else {
        // Loop through the output array and print each index out in order.
        foreach($labelsToPrint as $index => $invoicePage) {
          if($invoicePage != '') {
            $printable .= $invoicePage ;
          }
        }
      }

    ?>
<?php

$pageBottom = "</body></html>";


//echo $pageTop . $printable . $pageBottom; 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
echo "<pre>";

foreach($orders as $o) {
  foreach($o['product'] as $p) {
  
    foreach($p['option'] as $option) {

      echo print_r($option, true);
    }



    if(isset($p['serial']) && is_array($p['serial'])) {
      foreach($p['serial'] as $s) {
        echo $s;
        echo $p['featurecode'][0] . "\n";

        if(strpos($p['model'], "1099-FormsFiler")) {

          echo $p['model'] . "\n";

        }
  
      }
    }


  }
}

echo "</pre>";
exit;
*/
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


set_include_path('/var/www/advancedmicrosolutions.net/www/opencart/dompdf/dompdf');
require_once "dompdf_config.inc.php";
$dompdf = new DOMPDF();

if($label == 'invoice') {
  $dompdf->set_paper('A4');
  $dompdf->load_html($pageTop . $printable . $pageBottom);
  $dompdf->render();
  $dompdf->stream('example.pdf', array('Attachment' => 0));
}
elseif($label == 'ship') {
  $dompdf->set_paper('1.5x4', 'landscape');
  $dompdf->load_html(trim($pageTop . $printable . $pageBottom));
  $dompdf->render();
  $dompdf->stream('example.pdf', array('Attachment' => 0));
}

?>



























