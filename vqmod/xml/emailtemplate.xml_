<?xml version="1.0"?>
<modification>
	<id>Professional Email Template - AUTO GENERATED FROM DATABASE - DO NOT MAKE CHANGES HERE!!!!</id>
	<author>opencart-templates.co.uk</author>
	<modified>12:43 - 11th Mar 2014</modified>
	<version>0.14</version>
	<vqmver>2.4.0</vqmver>
	<!-- customer.register -->
	<file name="catalog/model/account/customer.php">
	<operation>
		<search position="after"><![CDATA[ $this->language->load('mail/customer'); ]]></search>
		<add><![CDATA[
		$template = new EmailTemplate($this->request, $this->registry);
		$template->load('customer.register');
			
		$template->addData($data); 

		$template->data['newsletter'] = $this->language->get((isset($data['newsletter']) && $data['newsletter'] == 1) ? 'text_yes' : 'text_no');
		$template->data['account_login'] = $this->url->link('account/login', 'email=' . $data['email'], 'SSL');
		$template->data['account_login_tracking'] = $template->getTracking($template->data['account_login']);
		$template->data['customer_group'] = (isset($customer_group_info['name'])) ? $customer_group_info['name'] : '';

		$this->load->model('account/address');
		$customer_address = $this->model_account_address->getAddressNotLoggedIn($address_id, $customer_id);
			
		$template->data['address'] = EmailTemplate::FormatAddress($customer_address, '', $customer_address['address_format']);

        if((isset($customer_group_info['approval']) && $customer_group_info['approval']) || $this->config->get('config_customer_approval')){
         	$template->data['customer_text'] = $this->language->get('text_approval'); // Backwards compatible with pre OC_ver 1.5.3
        } else {
           	$template->data['customer_text'] = $this->language->get('text_login');
        } ]]></add>
	</operation>
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail->send();]]></search>
		<add><![CDATA[        $mail = $template->hook($mail);]]></add>
	</operation>
	<operation>
		<search position="before"><![CDATA[
            public function editNewsletter($newsletter)]]></search>
	  	<ignoreif><![CDATA[ 
            public function editNewsletterUnsubscribe( ]]></ignoreif>
		<add><![CDATA[
            public function editNewsletterUnsubscribe($email){
            	$query = $this->db->query("SELECT * FROM ".DB_PREFIX."customer WHERE MD5(email) = '" . $this->db->escape($email) . "'");

				if ($query->num_rows) {
					$this->db->query("UPDATE ".DB_PREFIX."customer SET newsletter = '0' WHERE customer_id = " . (int)$query->row['customer_id'] . "");

					return $query->row;
				} else {
					return false;
				}
            }
		]]></add>
	</operation>
</file><!-- customer.register_admin -->
	<file name="catalog/model/account/customer.php">
	<operation>
		<search position="after"><![CDATA[
            if ($this->config->get('config_account_mail')) {]]></search>
		<add><![CDATA[
			$template->load('customer.register_admin');

            if((isset($customer_group_info['approval']) && $customer_group_info['approval']) || $this->config->get('config_customer_approval')){
	            $template->data['text_approve'] = $this->language->get('text_approve');
	            $template->data['account_approve'] = (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin/') . 'index.php?route=sale/customer&filter_approved=0';
            } ]]></add>
	</operation>
	<operation>
		<search position="before" index="2"><![CDATA[
            $mail->send();]]></search>
		<add><![CDATA[			$template->build();
			$template->fetch();
			$mail = $template->hook($mail); ]]></add>
	</operation>	
</file><!-- customer.forgotten -->
	<file name="catalog/controller/account/forgotten.php">
	<operation>
		<search position="before"><![CDATA[
           $mail = new Mail();]]></search>
		<add><![CDATA[
			$template = new EmailTemplate($this->request, $this->registry);
			$template->load('customer.forgotten');
		
			$template->addData($this->request->post);

			$template->data['password'] = $password;
			$template->data['account_login'] = $this->url->link('account/login', '', 'SSL');
			$template->data['account_login_tracking'] = $template->getTracking($template->data['account_login']); ]]></add>
	</operation>
	<operation>
		<search position="after" index="1"><![CDATA[
				$mail->setText(]]></search>
		<add><![CDATA[			$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- order.customer -->
	<file name="catalog/model/checkout/order.php">
	<operation>
		<search position="after"><![CDATA[ 
			'customer_id'             => $order_query->row['customer_id'], ]]></search>
		<ignoreif><![CDATA[ 
			'customer_group_id' => ]]></ignoreif>
		<add><![CDATA[				'customer_group_id' => (isset($order_query->row['customer_group_id'])) ? $order_query->row['customer_group_id'] : '',
				'affiliate_id' => (isset($order_query->row['affiliate_id'])) ? $order_query->row['affiliate_id'] : '',]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
			$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");]]></search>
		<add><![CDATA[
            $this->load->model('tool/image');

			$template = new EmailTemplate($this->request, $this->registry);
			$template->load('order.customer');
			
			$sql = "SELECT op.*, p.image, p.sku, p.quantity AS stock_quantity
				    FROM " . DB_PREFIX . "order_product op
					LEFT JOIN " . DB_PREFIX . "product p ON (p.product_id = op.product_id)
					WHERE order_id = '" . (int)$order_id . "'";
            $order_product_query = $this->db->query($sql);

            // Load Customer Group - check file exists for old versions of opencart
            if(isset($order_info['customer_group_id']) && $order_info['customer_group_id'] && file_exists(DIR_APPLICATION . 'model/account/customer_group.php')){
            	$this->load->model('account/customer_group');
				$customer_group_info = $this->model_account_customer_group->getCustomerGroup($order_info['customer_group_id']);
            }

            // Load affiliate data into email
            if(isset($order_info['affiliate_id']) && $order_info['affiliate_id']){
            	$this->load->model('affiliate/affiliate');
				$affiliate_info = $this->model_affiliate_affiliate->getAffiliate($order_info['affiliate_id']);
            }]]></add>
	</operation>
	<operation>
		<search position="replace" index="1"><![CDATA[ $template = new Template(); ]]></search>
		<add><![CDATA[			
			$template->addData($order_info);

			$template->data['affiliate'] = (isset($affiliate_info)) ? $affiliate_info : '';
			$template->data['customer_group'] = (isset($customer_group_info['name'])) ? $customer_group_info['name'] : '';
			$template->data['new_order_status'] = $order_status;]]></add>
	</operation>
	<operation>
		<search position="after" index="1"><![CDATA[ $template->data['link'] = ]]></search>
		<add><![CDATA[			$template->data['link_tracking'] = $template->getTracking($template->data['link']); ]]></add>
	</operation>
	<operation>
		<search position="after" index="1"><![CDATA[ $template->data['download'] = ]]></search>
		<add><![CDATA[			$template->data['download_tracking'] = $template->getTracking($template->data['download']); ]]></add>
	</operation>
	<operation>
		<search position="replace" index="1"><![CDATA[
			$template->data['products'][] = array( ]]></search>
		<add><![CDATA[if (isset($product['image'])) {
					$image = $this->model_tool_image->resize($product['image'], 50, 50);
				} else {
					$image = '';
				}

				$url = $this->url->link('product/product', 'product_id='.$product['product_id'], 'SSL');

				$template->data['products'][] = array(
					'url'     		=> $url,
					'url_tracking' 	=> $template->getTracking($url),
					'image'     	=> $image,
					'order_product_id' => $product['order_product_id'],
					'sku'			=> $product['sku'],
					'stock_quantity'=> ($product['stock_quantity'] - $product['quantity']),]]></add>
	</operation>
	<operation error="skip" info="Remove logo, this gets handled via email template">
		<search position="replace" index="1"><![CDATA[
			$template->data['logo'] = $this->config->get('config_url') . 'image/' . $this->config->get('config_logo');]]></search>
		<add/>
	</operation>
	<operation error="skip">
		<search position="replace" index="1"><![CDATA[
			$template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');]]></search>
		<add/>
	</operation>
	<operation error="skip">
		<search position="replace" index="1"><![CDATA[
			$template->data['logo'] = $this->model_tool_image->get($this->config->get('config_logo'));]]></search>
		<add/>
	</operation>
	<operation error="skip" info="1.5.1.3.1">
		<search position="replace" index="1"><![CDATA[
			$template->data['logo'] = 'cid:' . md5(basename($this->config->get('config_logo')));]]></search>
		<add/>
	</operation>
	<operation error="skip" info="remove attachedment">
		<search position="replace"><![CDATA[
			$mail->addAttachment(DIR_IMAGE . $this->config->get('config_logo'), md5(basename($this->config->get('config_logo'))));]]></search>
		<add/>
	</operation>
	<operation error="skip">
		<search position="replace" offset="4" index="1"><![CDATA[
			if ($comment && $notify) {]]></search>
		<add><![CDATA[
            if ($order_info['comment']) {
            	$template->data['comment'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $order_info['comment']);
            } else {
            	$template->data['comment'] = '';
            }

            if ($comment && $notify && $template->data['comment'] != $comment) {
				$template->data['instruction'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $comment);
			} else {
				$template->data['instruction'] = '';
			}]]></add>
	</operation>
	<operation info="offset causing too many issue with linebreaks">
		<search position="replace" index="1"><![CDATA[
            $html = $template->fetch($this->config->get('config_template') . '/template/mail/order.tpl');]]></search>
		<add/>
	</operation>
	<operation>
    	<search position="replace" index="1"><![CDATA[
            $html = $template->fetch('default/template/mail/order.tpl');]]></search>
		<add/>
	</operation>
	<operation>
		<search position="after"><![CDATA[
            $template->data['customer_id'] = $order_info['customer_id']; ]]></search>
		<add><![CDATA[
            $template->data['customer_name'] = $order_info['firstname'] . ' ' . $order_info['lastname'];
            $template->data['customer_firstname'] = $order_info['firstname'];
            $template->data['customer_lastname'] = $order_info['lastname'];]]></add>
	</operation>
	<operation>
		<search position="replace" index="1"><![CDATA[
			$mail->setHtml($html);]]></search>
		<add trim="true"><![CDATA[
			$mail = $template->hook($mail);]]></add>
	</operation>
	<operation error="skip" info="1.5.5.1">
        <search position="replace"><![CDATA[
            'value' => (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)]]></search>
		<add trim="true"><![CDATA[
            'value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value)]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
            'value' => (strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)]]></search>
		<add trim="true"><![CDATA[
            'value' => (strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value)]]></add>
	</operation>
	<operation error="skip" info="1.5.1.3">
		<search position="replace"><![CDATA[
            'value' => (strlen($option['value']) > 20 ? substr($option['value'], 0, 20) . '..' : $option['value'])]]></search>
		<add trim="true"><![CDATA[
            'value' => (strlen($option['value']) > 120 ? substr($option['value'], 0, 120) . '..' : $option['value'])]]></add>
	</operation>
	<operation info="Add product option price">
		<search position="replace" index="1"><![CDATA[
            $order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");]]></search>
		<add trim="true"><![CDATA[
            $order_option_query = $this->db->query("SELECT oo.*, pov.* FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (pov.product_option_value_id = oo.product_option_value_id) WHERE oo.order_id = '" . (int)$order_id . "' AND oo.order_product_id = '" . (int)$product['order_product_id'] . "'");]]></add>
	</operation>
	<operation info="Add product option price">
		<search position="before" index="1"><![CDATA[
            $option_data[] = array(]]></search>
		<add><![CDATA[					$price = false;
					if ((float)$option['price']) {
						$price = $this->currency->format($option['price'], $this->config->get('config_currency'));
					}]]></add>
	</operation>
	<operation info="Add product option price">
		<search position="after" index="1"><![CDATA[
            'name'  => $option['name'],]]></search>
		<add><![CDATA[						'price'  => $price,
						'price_prefix'  => $option['price_prefix'],]]></add>
	</operation>
</file><!-- order.admin -->
	<file name="catalog/model/checkout/order.php">
	<operation>
		<search position="replace" index="1"><![CDATA[
            $subject = sprintf($language->get('text_new_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $order_id);]]></search>
		<add><![CDATA[$subject = sprintf($language->get('text_new_subject_admin'), $order_id, $template->data['customer_name'], html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));
				$template->load('order.admin');

				$template->data['order_link'] = (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin/') . 'index.php?route=sale/order/info&order_id=' . $order_id;]]></add>
	</operation>
	<operation info="Admin email">
		<search position="after" index="2"><![CDATA[
            $mail->setText(]]></search>
		<add><![CDATA[            	$template->build();
				$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- order.customer_update -->
	<file name="catalog/model/checkout/order.php">
	<operation info="Method:update">
		<search position="after" index="1"><![CDATA[
			$subject = sprintf($language->get('text_update_subject')]]></search>
		<add><![CDATA[
            	$template = new EmailTemplate($this->request, $this->registry);
            	$template->load('order.customer_update');

				$template->addData($order_info);
				$template->addData('comment', $comment);

				$template->data['order_url'] = ($order_info['customer_id']) ? ($order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id) : '';
				$template->data['order_url_tracking'] = $template->getTracking($template->data['order_url']);
				$template->data['date_added'] = date($language->get('date_format_short'), strtotime($order_info['date_added']));]]></add>
	</operation>
	<operation info="Method:update">
		<search position="after"><![CDATA[
            $message .= $order_status_query->row['name']]]></search>
		<add><![CDATA[					$template->data['order_status'] = $order_status_query->row['name'];]]></add>
	</operation>
	<operation info="Method:update">
		<search position="after" index="3"><![CDATA[
            $mail->setText(]]></search>
		<add><![CDATA[				$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- information.contact -->
	<file name="catalog/controller/information/contact.php">
	<operation>
		<search position="before"><![CDATA[
            $mail = new Mail();]]></search>
		<add><![CDATA[
			$template = new EmailTemplate($this->request, $this->registry);
			$template->load('information.contact');

			$tracking = array();
			$tracking['ip_address'] = $this->request->server['REMOTE_ADDR'];
			$tracking['user_agent'] = (isset($this->request->server['HTTP_USER_AGENT'])) ? $this->request->server['HTTP_USER_AGENT'] : '';
			$tracking['accept_language'] = (isset($this->request->server['HTTP_ACCEPT_LANGUAGE'])) ? $this->request->server['HTTP_ACCEPT_LANGUAGE'] : '';
			if (!empty($this->request->server['HTTP_X_FORWARDED_FOR'])) {
				$tracking['remote_host'] = $this->request->server['HTTP_X_FORWARDED_FOR'];
			} elseif(!empty($this->request->server['HTTP_CLIENT_IP'])) {
				$tracking['remote_host'] = $this->request->server['HTTP_CLIENT_IP'];
			} else {
				$tracking['remote_host'] = '';
			}

			$template->addData($this->request->post);

			$template->data['enquiry'] = html_entity_decode(str_replace("\n", "<br />", $this->request->post['enquiry']), ENT_QUOTES, 'UTF-8');
			$template->data['user_tracking'] = $tracking;]]></add>
	</operation>
	<operation>
		<search position="after"><![CDATA[
            $mail->setText(]]></search>
		<add><![CDATA[			$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- information.contact_customer -->
	<file name="catalog/controller/information/contact.php">
	<operation>
		<search position="before" index="1"><![CDATA[
            $this->redirect($this->url->link('information/contact/success'));]]></search>
		<add><![CDATA[
			if($template->load('information.contact_customer')){
				$template->build();
				$mail = $template->hook($mail);
				$mail->send();
			}]]></add>
	</operation>
</file><!-- affiliate.register -->
	<file name="catalog/model/affiliate/affiliate.php">
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail = new Mail();]]></search>
		<add><![CDATA[		$template = new EmailTemplate($this->request, $this->registry);
		$template->load('affiliate.register');
		$template->data['url_affiliate_login'] = $this->url->link('affiliate/login', '', 'SSL');
		$template->data['url_affiliate_login_tracking'] = $template->getTracking($template->data['url_affiliate_login']);
		]]></add>
	</operation>
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail->send();]]></search>
		<add><![CDATA[		$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- affiliate.register_admin -->
	<file name="catalog/model/affiliate/affiliate.php">
	<operation>
		<search position="after" index="1"><![CDATA[
            $mail->send();]]></search>
		<add><![CDATA[
  		$template->load('affiliate.register_admin');			
		$template->addData($data);
		$template->build();
		$mail = $template->hook($mail);
		$mail->send();]]></add>
	</operation>
</file><!-- affiliate.forgotten -->
	<file name="catalog/controller/affiliate/forgotten.php">
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail = new Mail();]]></search>
		<add><![CDATA[            $template = new EmailTemplate($this->request, $this->registry);
			$template->load('affiliate.forgotten');			
			$template->data['password'] = $password;
			$template->data['account_login'] = $this->url->link('affiliate/login', '', 'SSL');
 			$template->data['account_login_tracking'] = $template->getTracking($template->data['account_login']); ]]></add>
	</operation>
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail->send();]]></search>
		<add><![CDATA[            $mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- order.voucher -->
	<file name="catalog/model/checkout/voucher.php">
	<operation>
		<search position="replace" index="1"><![CDATA[
            $template = new Template();]]></search>
		<add><![CDATA[$this->load->model('tool/image');
            	$template = new EmailTemplate($this->request, $this->registry);
            	$template->load('order.voucher');]]></add>
	</operation>
	<operation error="skip" info="1.5.0.5">
		<search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . basename($voucher['image']);]]></search>
		<add trim="true"><![CDATA[
            	$template->data['image'] = $this->model_tool_image->get($voucher['image']);]]></add>
	</operation>
	<operation error="skip" info="1.5.1/1.5.1.3">
		<search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . md5(basename($voucher['image']));]]></search>
		<add trim="true"><![CDATA[
            	$template->data['image'] = $this->model_tool_image->get($voucher['image']);]]></add>
	</operation>
	<operation error="skip" info="Remove attachment">
		<search position="replace"><![CDATA[
            $mail->addAttachment(DIR_IMAGE . $voucher['image'], md5(basename($voucher['image'])));]]></search>
		<add/>
	</operation>
	<operation info="Less error prone to replace each line instead of using offset">
		<search position="replace"><![CDATA[
            $html = $template->fetch($this->config->get('config_template') . '/template/mail/voucher.tpl');]]></search>
		<add/>
	</operation>
    <operation>
		<search position="replace"><![CDATA[
            $html = $template->fetch('default/template/mail/voucher.tpl');]]></search>
		<add/>
	</operation>
	<operation>
		<search position="replace" index="1"><![CDATA[
            $mail->setHtml($html);]]></search>
		<add trim="true"><![CDATA[
			$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- product.review -->
	<file name="catalog/model/catalog/review.php">
	<operation>
		<search position="after" osset="1" info="Insert below query"><![CDATA[
			public function addReview($product_id, $data) { ]]></search>
		<add><![CDATA[
			$review_id = $this->db->getLastId();

			$this->load->model('catalog/product');
			$product_info = $this->model_catalog_product->getProduct($product_id);

			$template = new EmailTemplate($this->request, $this->registry);
			$template->load('product.review');
            
			$template->addData($data, 'review');
			$template->addData($product_info, 'product');

			$template->data['product_link'] = $this->url->link('product/product', 'product_id=' . $product_id);
			$template->data['product_link_tracking'] = $template->getTracking($template->data['product_link']);
			$template->data['review_approve'] = (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin/') . 'index.php?route=catalog/review/update&review_id=' . $review_id;

			$mail = new Mail();
			$mail->protocol = $this->config->get('config_mail_protocol');
			$mail->parameter = $this->config->get('config_mail_parameter');
			$mail->hostname = $this->config->get('config_smtp_host');
			$mail->username = $this->config->get('config_smtp_username');
			$mail->password = $this->config->get('config_smtp_password');
			$mail->port = $this->config->get('config_smtp_port');
			$mail->timeout = $this->config->get('config_smtp_timeout');
			$mail = $template->hook($mail);
			$mail->send();

			// Send to additional alert emails
			$emails = explode(',', $this->config->get('config_alert_emails'));

			foreach ($emails as $email) {
				if ($email && preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $email)) {
					$mail->setTo($email);
					$mail->send();
				}
			} ]]></add>
	</operation>
</file><!-- account.return -->
	<file name="catalog/model/account/return.php">
	<operation>
		<search position="after" offset="1" info="insert after query"><![CDATA[
			public function addReturn($data) {]]></search>
		<add><![CDATA[
			$return_id = $this->db->getLastId();
			
   			$this->language->load('account/return');

			$template = new EmailTemplate($this->request, $this->registry);
			$template->load('account.return');
            
			$this->load->model('localisation/return_reason');

			// Backwards compatabile with 1.5.1.3
			if(isset($this->request->post['return_product'])){

				foreach ($this->request->post['return_product'] as $return_product) {
					$return_reason_info = $this->model_localisation_return_reason->getReturnReason($return_product['return_reason_id']);

					if(isset($return_product['product'])){
						$name = $return_product['product'];
					} elseif(isset($return_product['name'])){
						$name = $return_product['name'];
					} else {
						$name = '';
					}

					$return_product = array(
						'name' => $name,
						'model' => $return_product['model'],
						'quantity' => $return_product['quantity'],
						'reason' => ($return_reason_info) ? $return_reason_info['name'] : '',
						'opened' => $return_product['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no'),
						'comment' => (isset($return_product['comment'])) ? nl2br($return_product['comment']) : ''
					);
				}

			} else {
				$return_reason_info = $this->model_localisation_return_reason->getReturnReason($data['return_reason_id']);
				$return_product = array(
					'name' => $data['product'],
					'model' => $data['model'],
					'quantity' => $data['quantity'],
					'reason' => ($return_reason_info) ? $return_reason_info['name'] : '',
					'opened' => $data['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no'),
					'comment' => (isset($data['comment'])) ? nl2br($data['comment']) : ''
				);

			}
			
			$template->addData($data);

			$template->data['text_greeting'] = sprintf($this->language->get('text_greeting'), $this->config->get('config_name'));
			$template->data['order_date'] = date($this->language->get('date_format_short'), strtotime($data['date_ordered']));
			$template->data['comment'] = (isset($data['comment'])) ? nl2br($data['comment']) : '';
			$template->data['return_product'] = $return_product;
			$template->data['return_link'] = (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin/') . 'index.php?route=sale/return/info&return_id=' . $return_id;

			$mail = new Mail();
			$mail->protocol = $this->config->get('config_mail_protocol');
			$mail->parameter = $this->config->get('config_mail_parameter');
			$mail->hostname = $this->config->get('config_smtp_host');
			$mail->username = $this->config->get('config_smtp_username');
			$mail->password = $this->config->get('config_smtp_password');
			$mail->port = $this->config->get('config_smtp_port');
			$mail->timeout = $this->config->get('config_smtp_timeout');
			$mail = $template->hook($mail);
			$mail->send();

			// Send to additional alert emails
			$emails = explode(',', $this->config->get('config_alert_emails'));

			foreach ($emails as $email) {
				if ($email && preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $email)) {
					$mail->setTo($email);
					$mail->send();
				}
			} ]]></add>
	</operation>
</file><!-- ebay.admin -->
	<file name="system/library/ebay.php" error="skip">
	<operation info="method::notifyAdmin">
		<search position="before" index="1"><![CDATA[
			$mail->setText($message);]]></search>
		<add><![CDATA[		$template = new EmailTemplate($this->request, $this->registry);
		$template->load('ebay.admin');
		$template->build();
		$template->fetch(null, $message);
		$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- openbay.admin -->
	<file name="system/library/openbay.php" error="skip">
	<operation info="method::newOrderAdminNotify">
		<search position="after"><![CDATA[
			$subject = sprintf($language->get('text_new_subject')]]></search>
		<add><![CDATA[
		$template = new EmailTemplate($this->request, $this->registry, $order_info['language_id']);
		$template->load('openbay.admin');
			
		$template->addData($order_info);
		$template->data['order_status_id'] = $order_status_id;
		$template->data['new_order_status'] = $order_status;
		$template->data['comment'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $order_info['comment']);
		$template->data['date_added'] = date($language->get('date_format_short'), strtotime($order_info['date_added'])); ]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
			foreach ($order_product_query->rows as $product) {]]></search>
		<add><![CDATA[$template->data['products'] = array();

		foreach ($order_product_query->rows as $product) {
			$product['price'] = $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']);
			$product['total'] = $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']);
			$product['option'] = array();
		]]></add>
	</operation>
	<operation>
		<search position="before"><![CDATA[
			$text .= chr(9) . '-' . $option['name'] ]]></search>
		<add><![CDATA[				$product['option'][] = array(
					'name'  => $option['name'],			
       				'value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value)
				);]]></add>
	</operation>
	<operation info="Add to bottom of prducts loop">
		<search position="after" offset="1"><![CDATA[
			$text .= chr(9) . '-' . $option['name'] ]]></search>
		<add><![CDATA[			$product['url'] = $template->data['store_url'] . '?route=product/product&product_id='.$product['product_id'];
			$product['url_tracking'] = $template->getTracking($product['url']);

			$template->data['products'][] = $product;]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
			foreach ($order_voucher_query->rows as $voucher) {]]></search>
		<add><![CDATA[$template->data['vouchers'] = array();
		foreach ($order_voucher_query->rows as $voucher) {
				$voucher['price'] = $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']);
				$template->data['vouchers'][] = $voucher; ]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
			foreach ($order_total_query->rows as $total) {]]></search>
		<add><![CDATA[$template->data['totals'] = array();
		foreach ($order_total_query->rows as $total) {
				$template->data['totals'][] = $total; ]]></add>
	</operation>
	<operation>
		<search position="after"><![CDATA[
			$mail->setText( ]]></search>
		<add><![CDATA[			$mail = $template->hook($mail); ]]></add>
	</operation>
</file><!-- ebay.update -->
	<file name="catalog/model/ebay/order.php" error="skip">
	<operation info="method:update">
		<search position="after"><![CDATA[
			$subject = sprintf($language->get('text_update_subject')]]></search>
		<add><![CDATA[				$template = new EmailTemplate($this->request, $this->registry);
				$template->load(array(
					'key' => 'ebay.update',
					'language_id' => $order_info['language_id']
				));			
				$template->addData($order_info);]]></add>
	</operation>
	<operation info="method:update">
		<search position="after"><![CDATA[
			$message .= $language->get('text_update_footer');]]></search>
		<add><![CDATA[				$template->data['comment'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $comment);
				$template->data['order_status_id'] = $order_status_id;
				$template->data['new_order_status'] = ($order_status_query->num_rows) ? $order_status_query->row['name'] : '';
				$template->data['order_url'] = $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id;
				$template->data['order_url_tracking'] = $template->getTracking($template->data['order_url']);
				$template->data['date_added'] = date($language->get('date_format_short'), strtotime($order_info['date_added'])); ]]></add>
	</operation>
	<operation info="method:update">
		<search position="after" index="1"><![CDATA[
			$mail->setText(]]></search>
		<add><![CDATA[			$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- ebay.order -->
	<file name="catalog/model/ebay/order.php" error="skip">
	<operation info="method:confirm">
		<search position="replace"><![CDATA[
			$template = new Template();]]></search>
		<add><![CDATA[
			$template = new EmailTemplate($this->request, $this->registry, $order_info['language_id']);
			$template->load('ebay.order');
			$template->data['new_order_status'] = $order_status; ]]></add>
	</operation>
	<operation>
		<search position="replace" index="1"><![CDATA[
			$template->data['products'][] = array( ]]></search>
		<add><![CDATA[if (isset($product['image'])) {
					$image = $this->model_tool_image->resize($product['image'], 50, 50);
				} else {
					$image = '';
				}

				$template->data['products'][] = array(
					'image'     	=> $image,
					'order_product_id'	=> $product['order_product_id'],]]></add>
	</operation>
	<operation info="method:confirm">
		<search position="replace"><![CDATA[
			$html = $template->fetch($this->config->get('config_template') . '/template/mail/order.tpl');]]></search>
		<add><![CDATA[ $html = '';]]></add>
	</operation>
	<operation info="method:confirm">
		<search position="replace"><![CDATA[
			$html = $template->fetch('default/template/mail/order.tpl');]]></search>
		<add><![CDATA[ $html = '';]]></add>
	</operation>
	<operation info="method:confirm">
		<search position="after" index="2"><![CDATA[
			$mail->setText(]]></search>
		<add><![CDATA[				$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- play.order -->
	<file name="catalog/model/play/order.php" error="skip">
	<operation info="method:update">
		<search position="after"><![CDATA[
			$subject = sprintf($language->get('text_update_subject')]]></search>
		<add><![CDATA[
				$template = new EmailTemplate($this->request, $this->registry, $order_info['language_id']);
				$template->load('play.order');			
				$template->addData($order_info);]]></add>
	</operation>
	<operation info="method:update">
		<search position="after"><![CDATA[
			$message .= $language->get('text_update_footer');]]></search>
		<add><![CDATA[
				$template->data['order_id'] = $order_id;
				$template->data['order_status_id'] = $order_status_id;
				$template->data['comment'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $comment);
				$template->data['new_order_status'] = $order_id;
				$template->data['link'] = $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id;
				$template->data['link_tracking'] = $template->getTracking($template->data['link']);
				$template->data['date_added'] = date($language->get('date_format_short'), strtotime($order_info['date_added'])); ]]></add>
	</operation>
	<operation info="method:update">
		<search position="after" index="1"><![CDATA[
			$mail->setText(]]></search>
		<add><![CDATA[   				$mail = $template->hook($mail);]]></add>
	</operation>
</file><!-- admin.order_update -->
	<file name="admin/controller/sale/order.php">
	<operation>
		<search position="after"><![CDATA[
            $this->data['entry_notify'] = $this->language->get('entry_notify'); ]]></search>
		<add><![CDATA[
            $this->data['entry_summary'] = $this->language->get('entry_summary');
            $this->data['entry_show_products'] = $this->language->get('entry_show_products');
            $this->data['entry_show_totals'] = $this->language->get('entry_show_totals');
            $this->data['entry_show_downloads'] = $this->language->get('entry_show_downloads');
            $this->data['entry_show_vouchers'] = $this->language->get('entry_show_vouchers');
            $this->data['entry_template'] = $this->language->get('entry_template');
            $this->data['entry_pdf_attach'] = $this->language->get('entry_pdf_attach');
            $this->data['text_select'] = $this->language->get('text_select');

			$this->data['language_id'] = $order_info['language_id'];
			$this->data['store_id'] = $order_info['store_id'];
            
			$this->load->model('localisation/language');
			$this->load->model('module/emailtemplate');

            $this->data['templates'] = $this->model_module_emailtemplate->getTemplates(array(
				'emailtemplate_type' => 'order_status', 
				'language_id' => $order_info['language_id']
			));

            $this->data['templates_action'] = $this->url->link('module/emailtemplate/fetch_template', 'token='.$this->session->data['token'], 'SSL'); ]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
            nl2br($result['comment']) ]]></search>
		<add trim="true"><![CDATA[
            (strcmp($result['comment'], strip_tags($html_str = html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($result['comment']) : $html_str ]]></add>
	</operation>
	<operation>
		<search error="skip" position="replace"><![CDATA[
            nl2br($order_info['comment']) ]]></search>
		<add trim="true"><![CDATA[
            (strcmp($order_info['comment'], strip_tags($html_str = html_entity_decode($order_info['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($order_info['comment']) : $html_str ]]></add>
	</operation>
</file>
		
<file name="admin/view/template/sale/order_info.tpl">
	<operation>
		<search position="after"><![CDATA[
            $('.vtabs a').tabs(); ]]></search>
		<add><![CDATA[//--></script> 			
<script type="text/javascript" src="view/javascript/ckeditor/ckeditor.js"></script>
<script type="text/javascript"><!--
(function($){

	// Order history show/hide summary options
	function showEmailOptions($row, $checkbox){
		if($checkbox.is(':checked')) { 
			$row.show(); 
		} else { 
			$row.hide(); 
		}
	}				
	
	$(document).ready(function() {
		$('input[name=notify]').eq(0).each(function(){
			showEmailOptions($('.emailOptions'), $(this));
		}).change(function(){
			showEmailOptions($('.emailOptions'), $(this));
		});
		
   		$('select#field_templates').change(function(){			
			var val = $(this).val();
			if (!val || !confirm("Are you sure you want to change the template? This will clear all of the text inside the editor")) return;
			$.ajax({
				url: '<?php echo html_entity_decode($templates_action); ?>',
	  			type: 'get',
				data: 'id=' + val + '&store_id=<?php echo $store_id; ?>' + '&language_id=<?php echo $language_id; ?>' + '&order_id=<?php echo $order_id; ?>',
				dataType: 'html',
	  			success: function(html) {
					$('textarea[name=comment]').val(html);  
					CKEDITOR.instances['comment'].setData(html);  
				},
				error: function(xhr, ajaxOptions, thrownError) {
					console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
					alert('Error. More details in console.');
				}
			});	
		});
 	}); // doc.ready
})(jQuery);		
			
CKEDITOR.replace('comment', {
	filebrowserImageBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserImageUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>'
}); ]]></add>
	</operation>
	<operation info="Add checkboxes into ajax post data">
		<search position="replace"><![CDATA[
            + '&notify=' ]]></search>
		<add trim="true"><![CDATA[
            <?php if(!empty($products)){ ?>+ ($('input[name=\'show_products\']').attr('checked') ? '&show_products=1' : '')<?php }
            if(!empty($downloads)){ ?>+ ($('input[name=\'show_downloads\']').attr('checked') ? '&show_downloads=1' : '')<?php }
            if(!empty($vouchers)){ ?>+ ($('input[name=\'show_vouchers\']').attr('checked') ? '&show_vouchers=1' : '')<?php } 
            if(!empty($totals)){ ?>+ ($('input[name=\'show_totals\']').attr('checked') ? '&show_totals=1' : '')<?php } ?>
            + ($('input[name=\'attach_invoice_pdf\']').attr('checked') ? '&attach_invoice_pdf=1' : '') + '&notify=' ]]></add>
	</operation>
	<operation error="skip">
		<search position="after"><![CDATA[
            $('#button-history').live('click', function() { ]]></search>
		<add><![CDATA[            CKEDITOR.instances.comment.updateElement(); ]]></add>
	</operation>
	<operation error="skip" info="Old versions opencart">
		<search position="after"><![CDATA[
            function history() { ]]></search>
		<add><![CDATA[            CKEDITOR.instances.comment.updateElement(); ]]></add>
	</operation>
	<operation error="skip">
		<search position="before"><![CDATA[
            $('textarea[name=\'comment\']').val(''); ]]></search>
		<add><![CDATA[            CKEDITOR.instances.comment.setData('');            
            $('#tab-history .form').each(function(){
            	$(this).find('input[type=checkbox], input[type=radio]').removeAttr('checked');
            	$(this).find('select > option').removeAttr('selected');
            	$(this).find('.emailOptions').hide();
            }); ]]></add>
	</operation>
	<operation info="Add order summary option">
		<search position="after"><![CDATA[
            <td><input type="checkbox" name="notify" value="1" /></td> ]]></search>
		<add><![CDATA[
          </tr>
          <tr class="emailOptions" style="display: none">
            <td><?php echo $entry_summary; ?></td>
            <td>
            	<?php if(!empty($products)){ ?>
            		<label><input type="checkbox" name="show_products" value="1" style="vertical-align: middle;" /> <?php echo $entry_show_products; ?></label><br />
           		<?php } ?>
            	<?php if(!empty($totals)){ ?>
            		<hr style="border-top: 1px dotted #ccc; background: none; border-bottom: none; border-left: none; border-right: none;" />
            		<label><input type="checkbox" name="show_totals" value="1" style="vertical-align: middle;" /> <?php echo $entry_show_totals; ?></label><br />
           		<?php } ?>
	         	<?php if(!empty($downloads)){ ?>
	         		<hr style="border-top: 1px dotted #ccc; background: none; border-bottom: none; border-left: none; border-right: none;" />
	         		<label><input type="checkbox" name="show_downloads" value="1" style="vertical-align: middle;" /> <?php echo $entry_show_downloads; ?></label><br />
         		<?php } ?>
	         	<?php if(!empty($vouchers)){ ?>
	         		<hr style="border-top: 1px dotted #ccc; background: none; border-bottom: none; border-left: none; border-right: none;" />
	         		<label><input type="checkbox" name="show_vouchers" value="1" style="vertical-align: middle;" /> <?php echo $entry_show_vouchers; ?></label>
         		<?php } ?>
   			</td>
          </tr>
          <tr class="emailOptions" style="display: none">
            <td><?php echo $entry_pdf_attach; ?></td>
            <td>
         		<label><input type="checkbox" name="attach_invoice_pdf" value="1" style="vertical-align: middle;" /></label>
			</td>   
  	 	  <?php if(!empty($templates)){ ?>			
          </tr>
          <tr class="emailOptions" style="display: none">
            <td><?php echo $entry_template; ?></td>
            <td>
            	<select id="field_templates">
	            	<option value=""><?php echo $text_select; ?></option>
	            	<?php foreach($templates as $_template){ ?>
	            		<option value="<?php echo $_template['emailtemplate_id']; ?>"><?php echo $_template['emailtemplate_label']; ?></option>
	            	<?php } ?>
            	</select>
 			</td> 
		  <?php } ?> ]]></add>
	</operation>
</file>

<file name="admin/model/sale/order.php">
	<operation>
		<search position="after"><![CDATA[
            if ($data['notify']) ]]></search>
		<add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
               
			$template_data = array('key' =>'admin.order_update');
			if(isset($order_info['store_id'])){
				$template_data['store_id'] = $order_info['store_id'];
			}
			if(isset($order_info['language_id'])){
				$template_data['language_id'] = $order_info['language_id'];
			}

            $template->load($template_data);

            $template->data['products'] = array();  
            if(isset($data['show_products'])){ 
            	$this->load->model('tool/image');  
            	$this->load->model('catalog/product');  
				$products = $this->model_sale_order->getOrderProducts($this->request->get['order_id']);	
				
				foreach ($products as $product) {
					$product = array_merge($this->model_catalog_product->getProduct($product['product_id']), $product);
				
					// Product Options
					$option_data = array();	
					$options = $this->model_sale_order->getOrderOptions($this->request->get['order_id'], $product['order_product_id']);	
					foreach ($options as $option) {
						if ($option['type'] != 'file') {
							$option_data[] = array(
								'name'  => $option['name'],
								'value' => $option['value'],
								'type'  => $option['type']
							);
						} else {
							$option_data[] = array(
								'name'  => $option['name'],
								'value' => utf8_substr($option['value'], 0, utf8_strrpos($option['value'], '.')),
								'type'  => $option['type'],
								'href'  => $this->url->link('sale/order/download', 'token=' . $this->session->data['token'] . '&order_id=' . $this->request->get['order_id'] . '&order_option_id=' . $option['order_option_id'], 'SSL')
							);						
						}
					}
					
					if (isset($product['image'])) {
						$image = $this->model_tool_image->resize($product['image'], 50, 50);
					} else {
						$image = '';
					}

					$url = $template->data['store_url'] . '?route=product/product&product_id='.$product['product_id'];
	
					$template->data['products'][] = array(
						'url'     		=> $url,
						'url_tracking' 	=> $template->getTracking($url),
						'order_product_id' => $product['order_product_id'],
						'product_id'       => $product['product_id'],
						'name'    	 	   => $product['name'],
						'model'    		   => $product['model'],
						'image'    		   => $image,
						'option'   		   => $option_data,
						'quantity'		   => $product['quantity'],
						'price'    		   => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
						'total'    		   => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']),
						'href'     		   => $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $product['product_id'], 'SSL')
					);
				}
			} // Products
			
			$template->data['vouchers'] = array();
			if(isset($data['show_vouchers'])){
				$vouchers = $this->model_sale_order->getOrderVouchers($this->request->get['order_id']);			 
				foreach ($vouchers as $voucher) {
					$template->data['vouchers'][] = array(
						'description' => $voucher['description'],
						'amount'      => $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']),
						'href'        => $this->url->link('sale/voucher/update', 'token=' . $this->session->data['token'] . '&voucher_id=' . $voucher['voucher_id'], 'SSL')
					);
				}
			} // Vouchers
			
			$template->data['totals'] = array();
			if(isset($data['show_totals'])){
				$template->data['totals'] = $this->model_sale_order->getOrderTotals($this->request->get['order_id']);
			} // Totals	
			
			$template->data['downloads'] = array();
			if(isset($data['show_downloads'])){				
				foreach ($products as $product) {
					$results = $this->model_sale_order->getOrderDownloads($this->request->get['order_id'], $product['order_product_id']);	
					foreach ($results as $result) {
						$template->data['downloads'][] = array(
							'name'      => $result['name'],
							'filename'  => $result['mask'],
							'remaining' => $result['remaining']
						);
					}
				}
			} // Downloads	
			
			$attachments = array();
			if(isset($data['attach_invoice_pdf'])){
				$this->load->model('module/emailtemplate/invoice');
				$attachments[] = $this->model_module_emailtemplate_invoice->getInvoice($this->request->get['order_id']);
			} // Invoice Attachment ]]></add>
	</operation>
	<operation>
		<search position="after"><![CDATA[
            $message .= $language->get('text_footer'); ]]></search>
		<add><![CDATA[  
            if (!empty($template->data['products'])) {
            	$message .= "\n" . $language->get('text_new_products') . "\n"; 
	            foreach ($template->data['products'] as $product) {
	                $message .= $product['quantity'] . 'x ' . $product['name'] . ' (' . $product['model'] . ') ' . html_entity_decode($product['total'], ENT_NOQUOTES, 'UTF-8') . "\n";
	                foreach ($product['option'] as $option) {
	                    $message .= chr(9) . '-' . $option['name'] . ' ' . (utf8_strlen($option['value']) > 20 ? utf8_substr($option['value'], 0, 20) . '..' : $option['value']) . "\n";
	                }
            	}
            }

	        if (!empty($template->data['vouchers'])) { 
	            foreach ($template->data['vouchers'] as $voucher) {
	                $message .= '1x ' . $voucher['description'] . ' ' . $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']);
	            }
            }
            
			if (!empty($template->data['totals'])) {
	            $message .= "\n" . $language->get('text_total') . "\n";	
	            foreach ($template->data['totals'] as $total) {
	                $message .= $total['title'] . ': ' . html_entity_decode($total['text'], ENT_NOQUOTES, 'UTF-8') . "\n";
	            }
            }
               
            if (!empty($template->data['downloads'])) {
                $message .= "\n" . $language->get('text_download') . "\n";
                $message .= $order_info['store_url'] . 'index.php?route=account/download' . "\n\n";
            }

			$template->addData($data);

			$template->addData($order_info);
             
            $template->data['comment'] = html_entity_decode($data['comment'], ENT_QUOTES, 'UTF-8');
            $template->data['invoice'] = html_entity_decode($order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8');
			$template->data['invoice_tracking'] = $template->getTracking($template->data['invoice']);

			$template->data['date_added'] = date($language->get('date_format_short'), strtotime($order_info['date_added']));
            
            $template->data['order_status'] = $order_status_query->row['name']; ]]></add>
	</operation>
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail->send(); ]]></search>
		<add><![CDATA[
            $mail = $template->hook($mail);
            foreach($attachments as $attachment){
            	$mail->addAttachment($attachment);
            } ]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
            comment = '" . $this->db->escape(strip_tags($data['comment'])) . "' ]]></search>
		<add trim="true"><![CDATA[
            comment = '" . $this->db->escape($data['comment']) . "' ]]></add>
	</operation>
    <operation>
        <search position="before"><![CDATA[
            'payment_firstname'       => $order_query->row['payment_firstname'], ]]></search>
        <add><![CDATA[            	'invoice_filename' 		   => $order_query->row['invoice_filename'], ]]></add>
	</operation>
</file><!-- admin.newsletter -->
	<file name="admin/controller/sale/contact.php">
	<operation> 
		<search position="after"><![CDATA[
            $this->data['entry_message'] = $this->language->get('entry_message'); ]]></search>
		<add><![CDATA[
		$this->data['entry_template'] = $this->language->get('entry_template');
		$this->data['entry_campaign_name'] = $this->language->get('entry_campaign_name');
		$this->data['entry_unsubscribe'] = $this->language->get('entry_unsubscribe');
		$this->data['warning_template_content'] = $this->language->get('warning_template_content');
           
		$this->load->model('localisation/language');
		$this->load->model('module/emailtemplate');

        $this->data['templates'] = $this->model_module_emailtemplate->getTemplates(array(
			'emailtemplate_type' => 'newsletter'
		));

		$this->data['languages'] = $this->model_localisation_language->getLanguages();		

		$config = $this->model_module_emailtemplate->getConfig(1, true, true);
        $this->data['campaign_name'] = $config['tracking_campaign_name'];    
		   
		if(isset($this->request->post['unsubscribe'])){
			$this->data['unsubscribe'] = $this->request->post['unsubscribe'];
		} else {
			$this->data['unsubscribe'] = array();
			foreach($this->data['languages'] as $language){
   				$oLanguage = new Language($language['directory']);
				$oLanguage->load('sale/contact');
				$this->data['unsubscribe'][$language['language_id']] = htmlspecialchars($oLanguage->get('text_unsubscribe'));   
			}
		}
		
        $this->data['templates_action'] = $this->url->link('module/emailtemplate/get_template', 'token='.$this->session->data['token'], 'SSL'); ]]></add>
	</operation>
	<operation info="Add extra info into email array, ensure affiliate is not effected">
		<search position="replace" index="1,2"><![CDATA[
            $emails[] = $result['email']; ]]></search>
		<add><![CDATA[$emails[$result['customer_id']] = array(
							'email' => $result['email'],
							'store_id' => $result['store_id'],
							'customer_id' => $result['customer_id'],
							'language_id' => $result['language_id']
						); ]]></add>
	</operation>
	<operation info="Add extra info into email array">
		<search position="replace"><![CDATA[
            $emails[] = $customer_info['email']; ]]></search>
		<add><![CDATA[$emails[] = array(
										'email' => $customer_info['email'],
										'customer_id' => $customer_info['customer_id'],
										'store_id' => $customer_info['store_id'],
										'language_id' => $customer_info['language_id']
									); ]]></add>
	</operation>
    <operation info="Add extra info into email array">
		<search position="replace"><![CDATA[
            $emails[$result['customer_id']] = $result['email']; ]]></search>
		<add><![CDATA[$emails[$result['customer_id']] = array(
							'email' => $result['email'],
							'customer_id' => $result['customer_id'],
							'store_id' => $result['store_id'],
							'language_id' => $result['language_id']
						); ]]></add>
	</operation>
	<operation info="Add extra info into email array for: product">
		<search position="replace" index="4"><![CDATA[
            $emails[] = $result['email']; ]]></search>
		<add><![CDATA[$emails[] = array(
							'email' => $result['email'],
							'store_id' => $result['store_id'],
							'customer_id' => $result['customer_id'],
							'language_id' => $result['language_id']
						); ]]></add>
	</operation>
	<operation info="Move message into foreach">
		<search position="replace"><![CDATA[
            foreach ($emails as $email) { ]]></search>
		<add/>
	</operation>  
	<operation>
		<search position="before"><![CDATA[
            $message  = '<html  ]]></search>
		<add><![CDATA[				$template = new EmailTemplate($this->request, $this->registry);

				$template_data = array('key' => 'admin.newsletter');
				if(isset($email['store_id'])){
					$template_data['store_id'] = $email['store_id'];
				} 

				$template->load($template_data);
					
				foreach ($emails as $email) {
					if(!isset($email['customer_id'])) continue; 

					$language_id = $email['language_id'];
					$subject = $this->request->post['subject'][$language_id];
					$body = $this->request->post['message'][$language_id];
					$unsubscribe = $this->request->post['unsubscribe'][$language_id];

					$template->addData($email);

					$template->setConfig('subject', $subject);
					$template->setConfig('utm_campaign', $this->request->post['campaign_name']);
		]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
            <title>' . $this->request->post['subject'] . '</title>' ]]></search>
		<add trim="true"><![CDATA[ 
			<title>' . $subject . '</title>' ]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
            $mail->setSubject(html_entity_decode($this->request->post['subject'] ]]></search>
		<add trim="true"><![CDATA[ 
			$mail->setSubject(html_entity_decode($subject ]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
            html_entity_decode($this->request->post['message']  ]]></search>
		<add trim="true"><![CDATA[ 
			html_entity_decode($message ]]></add>
	</operation>
	<operation>
		<search position="replace"><![CDATA[
            $mail->setHtml($message); ]]></search>
		<add><![CDATA[if($unsubscribe && in_array($this->request->post['to'], array('newsletter', 'customer_all', 'customer_group', 'customer'))) {
            				$url = (isset($store_info['url']) ? $store_info['url'] : HTTP_CATALOG) . 'index.php?route=account/newsletter/unsubscribe&code='.md5($email['email']);
            				$template->data['unsubscribe'] = sprintf(html_entity_decode($unsubscribe, ENT_QUOTES, 'UTF-8'), $url);
            			}
            
						$template->build();

						$template->fetch(null, $body);
			
						$mail = $template->hook($mail); ]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
            $mail->addAttachment($attachment['path'], $attachment['filename']); ]]></search>
		<add/>
	</operation>        
</file>
	
<file name="admin/view/template/sale/contact.tpl">
	<operation info="Replace subject/message we add it into tabs">
		<search position="replace" offset="7"><![CDATA[
            <td><span class="required">*</span> <?php echo $entry_subject; ?></td> ]]></search>
		<add><![CDATA[ 
		<?php if(!empty($templates)){ ?>
            <td><?php echo $entry_template; ?></td>
            <td>
            	<select id="field_templates" name="email_template">
	            	<option></option>
	            	<?php foreach($templates as $_template){ ?>
	            		<option value="<?php echo $_template['emailtemplate_id']; ?>"><?php echo $_template['emailtemplate_label']; ?></option>
	            	<?php } ?>
            	</select>
			</td>
		  </tr>
		  <tr>
		<?php } ?>           
            <td><?php echo $entry_campaign_name; ?></td>
            <td><input value="<?php echo $campaign_name; ?>" name="campaign_name" type="text" />
          </tr>
  		</table> ]]></add>
	</operation>
	<operation info="Add tabs outside of table">
		<search position="after" offset="3"><![CDATA[
           <td><input value="<?php echo $campaign_name; ?>" name="campaign_name" type="text" /> ]]></search>
		<add><![CDATA[				
		<div id="languages" class="htabs">
			<?php foreach ($languages as $language) { ?>
				<a href="#language<?php echo $language['language_id']; ?>">
					<img src="view/image/flags/<?php echo $language['image']; ?>" title="<?php echo $language['name']; ?>" /> 
					<?php echo $language['name']; ?>
				</a>
			<?php } ?>
		</div>

		<?php foreach ($languages as $language) { ?>
			<div id="language<?php echo $language['language_id']; ?>">
				<table class="form">
					<tr>
						<td><span class="required">*</span> <?php echo $entry_subject; ?></td>
                		<td><input type="text" name="subject[<?php echo $language['language_id']; ?>]" value="" style="width:100%; max-width:500px" /></td>
              		</tr>
					<tr>
						<td><?php echo $entry_unsubscribe; ?></td>
                		<td><input type="text" name="unsubscribe[<?php echo $language['language_id']; ?>]" value="<?php echo $unsubscribe[$language['language_id']]; ?>" style="width:100%; max-width:500px" /></td>
              		</tr>
              		<tr>
                		<td><span class="required">*</span> <?php echo $entry_message; ?></td>
                		<td><textarea name="message[<?php echo $language['language_id']; ?>]" id="message_<?php echo $language['language_id']; ?>"></textarea></td>
					</tr>
				</table>
			</div>
		<?php } ?> ]]></add>
	</operation>
	<operation info="Remove ckeditor so that we can add with languages" error="skip">
		<search position="replace" offset="7"><![CDATA[
            CKEDITOR.replace('message', { ]]></search>
		<add/>
	</operation>
	<operation info="Remove ckeditor so that we can add with languages" error="skip">
		<search position="replace" offset="7"><![CDATA[
            $('textarea[name=\'message\']').ckeditor({ ]]></search>
		<add/>
	</operation>
	<operation error="skip">
    	<search position="replace"><![CDATA[
			$('textarea[name="message"]').val(CKEDITOR.instances.message.getData()); ]]></search>
		<add><![CDATA[
			for(var instanceName in CKEDITOR.instances){
				CKEDITOR.instances[instanceName].updateElement();
			} ]]></add>
	</operation>
	<operation error="skip">
		<search position="before"><![CDATA[
            function send(url) { ]]></search>
		<add><![CDATA[
$('#languages a').tabs();
 
<?php foreach ($languages as $language) { ?>
CKEDITOR.replace('message_<?php echo $language['language_id']; ?>', {
	filebrowserBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserImageBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserFlashBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserImageUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
	filebrowserFlashUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>'
});
<?php } ?>

(function($){			
	$(document).ready(function() {
				
		$('select#field_templates').change(function(){
			var val = $(this).val(), 
				language_id, 
				store_id = $('select[name=store_id]').val();

			if(!val || !confirm("<?php echo $warning_template_content; ?>")) return;

			$.ajax({ 
				url: '<?php echo html_entity_decode($templates_action); ?>',
				type: 'get',
				data: 'id=' + val + '&store_id=' + store_id,
				dataType: 'json',
				success: function(json) {
					for(i in json) {
 						language_id = json[i]['language_id'];
						
 						if(json[i]['emailtemplate']['subject']){
							$("input[name='subject[" + language_id + "]']").val(json[i]['emailtemplate']['subject']);
						}

						if(json[i]['emailtemplate']['content1']){
							editor = CKEDITOR.instances["message_" + language_id];
							editor.setData(json[i]['emailtemplate']['content1']);
						}
					}
				},
				error: function(xhr, ajaxOptions, thrownError) {
                    console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                    alert('Error. More details in console.');
            	}
			});	
		});
					
 });	// doc.ready
})(jQuery); ]]></add>
	</operation>
</file><!-- admin.voucher -->
	<file name="admin/model/sale/voucher.php">
        <operation>
            <search position="replace"><![CDATA[
            $template = new Template(); ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            $template->load(array(
				'key' => 'admin.voucher',
				'store_id' => $order_info['store_id'],
				'language_id' => $order_info['language_id']
			));
	 		$template->addData($voucher_info); ]]></add>
        </operation>
        <operation error="skip" info="OC:1.5.0.5">
            <search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . basename($voucher_theme_info['image']); ]]></search>
            <add><![CDATA[
            $template->data['image'] = HTTP_CATALOG . 'image/' . $voucher_theme_info['image']; ]]></add>
        </operation>
        <operation error="skip" info="OC:1.5.1.3">
            <search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . md5(basename($voucher_theme_info['image'])); ]]></search>
            <add><![CDATA[
            $template->data['image'] = HTTP_CATALOG . 'image/' . $voucher_theme_info['image']; ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            $mail->addAttachment(DIR_IMAGE . $voucher_theme_info['image'], md5(basename($voucher_theme_info['image']))); ]]></search>
            <add/>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->setHtml($template->fetch('mail/voucher.tpl')); ]]></search>
            <add><![CDATA[
            list($width, $height) = getimagesize(DIR_IMAGE . $voucher_theme_info['image']);
           	$template->data['image_width'] = $width;
           	$template->data['image_height'] = $height;
			
			$mail = $template->hook($mail); ]]></add>
        </operation>
	</file><!-- admin.customer_approve -->
	<file name="admin/model/sale/customer.php">
	<operation error="skip">
		<search position="replace"><![CDATA[
			$store_url = $store_info['url'] . 'index.php?route=account/login'; ]]></search>
		<add><![CDATA[            	$store_url = $store_info['url'];
				$account_login = $store_info['url'] . 'index.php?route=account/login'; ]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
			$store_url = HTTP_CATALOG . 'index.php?route=account/login'; ]]></search>
		<add><![CDATA[            	$store_url = HTTP_CATALOG;
				$account_login = HTTP_CATALOG . 'index.php?route=account/login'; ]]></add>
	</operation>		
	<operation>
		<search position="replace"><![CDATA[
            $message .= $store_url . "\n\n"; ]]></search>
		<add><![CDATA[
           	$message .= $account_login . "\n\n"; ]]></add>
	</operation>
	<operation>
		<search position="after"><![CDATA[
            $message .= $store_name; ]]></search>
		<add><![CDATA[                        
            $template = new EmailTemplate($this->request, $this->registry);

   			$data = array('key' =>'admin.customer_approve');
			if(isset($customer_info['store_id'])){
				$data['store_id'] = $customer_info['store_id'];
			}
			if(isset($customer_info['language_id'])){
				$data['language_id'] = $customer_info['language_id'];
			}

            $template->load($data);
		
			$template->addData($customer_info, 'customer');
			            
			$template->data['text_welcome'] = sprintf($this->language->get('text_approve_welcome'), $store_name);

			$template->data['account_login'] = $account_login;
			$template->data['account_login_tracking'] = $template->getTracking($account_login); ]]></add>
        </operation>
		<operation>
            <search position="before" index="1"><![CDATA[
            $mail->send(); ]]></search>
            <add><![CDATA[            $mail = $template->hook($mail); ]]></add>
        </operation>
</file><!-- admin.customer_transaction -->
	<file name="admin/model/sale/customer.php">
	<operation info="method:addTransaction">
		<search position="after"><![CDATA[
            $message .= sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($customer_id))); ]]></search>
		<add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);

            $data = array('key' =>'admin.customer_transaction');
			if(isset($customer_info['store_id'])){
				$data['store_id'] = $customer_info['store_id'];
			}
			if(isset($customer_info['language_id'])){
				$data['language_id'] = $customer_info['language_id'];
			}

            $template->load($data);
		
			$template->addData('amount', $amount);
			$template->addData('description', $description);

			$template->addData($customer_info, 'customer');

			if($order_id){
				$this->load->model('sale/order');		
				$order_info = $this->model_sale_order->getOrder($order_id);

				$template->addData($order_info, 'order');
			}
			
			$template->data['transaction_received'] = sprintf($this->language->get('text_transaction_received'), $this->currency->format($amount, $this->config->get('config_currency')));
			$template->data['transaction_total'] = sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($customer_id))); ]]></add>
	</operation>
	<operation info="method:addTransaction">
		<search position="before" index="2"><![CDATA[
            $mail->send(); ]]></search>
		<add><![CDATA[
            $mail = $template->hook($mail); ]]></add>
	</operation>
</file><!-- admin.customer_reward -->
	<file name="admin/model/sale/customer.php">
	<operation info="method:addReward">
		<search position="after"><![CDATA[
            $message .= sprintf($this->language->get('text_reward_total'), $this->getRewardTotal($customer_id)); ]]></search>
		<add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
			$data = array('key' =>'admin.customer_reward');
			if(isset($customer_info['store_id'])){
				$data['store_id'] = $customer_info['store_id'];
			}
			if(isset($customer_info['language_id'])){
				$data['language_id'] = $customer_info['language_id'];
			}

            $template->load($data);
		
			$template->addData($customer_info, 'customer');
			
			$template->data['reward_received'] = sprintf($this->language->get('text_reward_received'), $points);
			$template->data['reward_total'] = sprintf($this->language->get('text_reward_total'), $this->getRewardTotal($customer_id));]]></add>
	</operation>
	<operation info="method:addReward">
		<search position="before" index="3"><![CDATA[
            $mail->send(); ]]></search>
		<add><![CDATA[            $mail = $template->hook($mail); ]]></add>
	</operation>
</file><!-- admin.return_history -->
	<file name="admin/controller/sale/return.php">
	<operation>
		<search position="after"><![CDATA[
            $this->data['entry_notify'] = $this->language->get('entry_notify'); ]]></search>
		<add><![CDATA[
            $this->data['entry_summary'] = $this->language->get('entry_summary');
            $this->data['entry_show_summary'] = $this->language->get('entry_show_summary'); ]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
            nl2br($result['comment']) ]]></search>
		<add trim="true"><![CDATA[
            (strcmp($result['comment'], strip_tags($html_str = html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($result['comment']) : $html_str ]]></add>
	</operation>
</file>
    
<file name="admin/view/template/sale/return_info.tpl">
	<operation info="Add return summary option">
		<search position="after"><![CDATA[
            <td><input type="checkbox" name="notify" value="1" /></td> ]]></search>
		<add><![CDATA[
          </tr>
          <tr id="summaryRow" style="display: none">
            <td><?php echo $entry_summary; ?></td>
            <td>
           		<label><input type="checkbox" name="show_summary" value="1" style="vertical-align: middle;" /> <?php echo $entry_show_summary; ?></label><br /> ]]></add>
	</operation>
    <operation>
		<search position="after"><![CDATA[
            $('.vtabs a').tabs(); ]]></search>
		<add><![CDATA[//--></script> 			
            <script type="text/javascript" src="view/javascript/ckeditor/ckeditor.js"></script>
			<script type="text/javascript"><!--
			// Order history show/hide summary options
			(function($){
				function showSummaryRow($notify){
					var $summaryRow = $('#summaryRow');
					if($notify.is(':checked')) { 
						$summaryRow.show(); 
					} else { 
						$summaryRow.hide(); 
					}
				}				
				$(document).ready(function() {
					$('input[name=notify]').eq(0).each(function(){
						showSummaryRow($(this));
					}).change(function(){
						showSummaryRow($(this));
					});
				});	
			})(jQuery);		
			
			CKEDITOR.replace('comment', {
				filebrowserImageBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserImageUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>'
			}); ]]></add>
	</operation>
	<operation>
		<search position="after"><![CDATA[
            function history() { ]]></search>
		<add><![CDATA[
            // Force CKEDITOR instance in the form to update their respective fields
            CKEDITOR.instances.comment.updateElement(); ]]></add>
	</operation>
	<operation error="skip">
		<search position="before"><![CDATA[
            $('textarea[name=\'comment\']').val(''); ]]></search>
		<add><![CDATA[
            // Clear CKEDITOR data
            CKEDITOR.instances.comment.setData(''); ]]></add>
	</operation>
    <operation info="Add checkboxes into ajax post data">
		<search position="replace"><![CDATA[
            + '&notify=' ]]></search>
		<add trim="true"><![CDATA[
            + '&show_summary=' + encodeURIComponent($('input[name=\'show_summary\']').attr('checked') ? 1 : 0) + '&notify=' ]]></add>
	</operation>
</file>

<file name="admin/model/sale/return.php">
	<operation>
		<search position="after" index="1"><![CDATA[
            if ($return_query->num_rows) { ]]></search>
		<add><![CDATA[            
			$this->load->model('localisation/return_reason');
			$return_reason_info = $this->model_localisation_return_reason->getReturnReason($return_query->row['return_reason_id']); ]]></add>
	</operation>
	<operation>
		<search position="after"><![CDATA[
            $message .= $this->language->get('text_footer'); ]]></search>
		<add><![CDATA[            
			$this->load->model('sale/order');
			$order_info = $this->model_sale_order->getOrder($return_query->row['order_id']);
			$store_id = $order_info['store_id'];
			
			$template = new EmailTemplate($this->request, $this->registry);
			
			$templateData = array('key' => 'admin.return_history');
			if(isset($order_info['store_id'])){
				$templateData['store_id'] = $order_info['store_id'];
			}
			if(isset($order_info['language_id'])){
				$templateData['language_id'] = $order_info['language_id'];
			}

            $template->load($templateData);
						
			$template->addData($return_query->row);
			$template->addData($data);
			$template->addData($order_info, 'order');

			$template->data['return_id'] = $return_id;
			$template->data['date_added'] = date($this->language->get('date_format_short'), strtotime($return_query->row['date_added']));
			$template->data['status'] = $return_query->row['status'];
			$template->data['comment'] = (isset($data['comment'])) ? (strcmp($data['comment'], strip_tags($html_str = html_entity_decode($data['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($data['comment']) : $html_str : '';
			$template->data['reason'] = ($return_reason_info) ? $return_reason_info['name'] : '';
			$template->data['opened'] = $return_query->row['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no');
			$template->data['show_summary'] = isset($data['show_summary']) ? $data['show_summary'] : 0; ]]></add>
	</operation>
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail->send(); ]]></search>
		<add><![CDATA[
            $mail = $template->hook($mail); ]]></add>
	</operation>
	<operation error="skip">
		<search position="replace"><![CDATA[
            comment = '" . $this->db->escape(strip_tags($data['comment'])) . "' ]]></search>
		<add trim="true"><![CDATA[
            comment = '" . $this->db->escape($data['comment']) . "' ]]></add>
	</operation>
</file><!-- admin.affiliate_approve -->
	<file name="admin/model/sale/affiliate.php">
	<operation>
		<search position="before"><![CDATA[
            $message .= $this->config->get('config_name'); ]]></search>
		<add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            $template->load(array(
				'key' => 'admin.affiliate_approve'
			));
			$template->addData($affiliate_info);                       
			$template->data['text_welcome'] = sprintf($this->language->get('text_approve_welcome'), $this->config->get('config_name'));
			$template->data['affiliate_login'] = HTTP_CATALOG . 'index.php?route=affiliate/login';
			$template->data['affiliate_login_tracking'] =  $template->getTracking($template->data['affiliate_login']);]]></add>
	</operation>
	<operation>
		<search position="before" index="1"><![CDATA[
            $mail->send(); ]]></search>
		<add><![CDATA[            $mail = $template->hook($mail); ]]></add>
        </operation>
	</file><!-- admin.affiliate_transaction -->
	<file name="admin/model/sale/affiliate.php">
	<operation>
		<search position="after"><![CDATA[
			$message .= sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($affiliate_id), $this->config->get('config_currency'))); ]]></search>
		<add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            $template->load('admin.affiliate_transaction');
            
			$template->data['text_received'] = sprintf($this->language->get('text_transaction_received'), $this->currency->format($amount, $this->config->get('config_currency')));
			$template->data['text_total'] = sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($affiliate_id), $this->config->get('config_currency'))); ]]></add>
	</operation>
	<operation>
		<search position="before" index="2"><![CDATA[
            $mail->send(); ]]></search>
		<add><![CDATA[            $mail = $template->hook($mail); ]]></add>
	</operation>
</file><!-- admin.customer_create -->
	<file name="admin/view/template/sale/customer_form.tpl">
	<operation>
		<search position="before" index="1"><![CDATA[
           <td><?php echo $entry_status; ?></td> ]]></search>
		<add><![CDATA[					
                <td><?php echo $entry_notify; ?></td>
                <td>
                    <input type="checkbox" name="notify" value="1"<?php if ($notify) { ?> selected="selected" <?php } ?> />
				</td>
            </tr>
			<tr>]]></add>
	</operation>
</file>

<file name="admin/controller/sale/customer.php">
	<operation>
		<search position="before" index="1"><![CDATA[
           if (isset($this->request->post['password'])) {  ]]></search>
		<add><![CDATA[
		$this->data['entry_notify'] = $this->language->get('entry_notify');

        if (isset($this->request->post['notify'])) { 
			$this->data['notify'] = 1;
		} else {
			$this->data['notify'] = 0;
		}; ]]></add>
	</operation>
</file>

<file name="admin/model/sale/customer.php">
	<operation>
		<search position="after" index="1" offset="3"><![CDATA[
            $this->db->query("UPDATE " . DB_PREFIX . "customer SET address_id = '" . $address_id . "' WHERE customer_id = '" . (int)$customer_id . "'"); ]]></search>
		<add><![CDATA[
		if(isset($data['notify'])){
			$template = new EmailTemplate($this->request, $this->registry);
			$template->load('admin.customer_create');

			$template->addData($data);

			$template->data['newsletter'] = $this->language->get((isset($data['newsletter']) && $data['newsletter'] == 1) ? 'text_yes' : 'text_no');

			$template->data['account_login'] = $this->url->link('account/login', 'email=' . $data['email'], 'SSL');
			$template->data['account_login_tracking'] = $template->getTracking($template->data['account_login']);

			if(isset($data['customer_group_id']) && $data['customer_group_id']){
				$this->load->model('sale/customer_group');		
				$customer_group_info = $this->model_sale_customer_group->getCustomerGroup($data['customer_group_id']);
				$template->data['customer_group'] = $customer_group_info['name'];
			}

			if(isset($address_id)){
				$address =  $this->getAddress($address_id);
				$template->data['address'] = EmailTemplate::FormatAddress($address, '', $address['address_format']);
			}

			$template->send(); 
  		} // notify ]]></add>
	</operation>
</file></modification>
